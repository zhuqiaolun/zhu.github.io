<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>zhuqiaolun - 个人博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.zhuqiaolun.com/"/>
  <updated>2021-03-15T10:58:55.582Z</updated>
  <id>https://www.zhuqiaolun.com/</id>
  
  <author>
    <name>zhuqiaolun</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MyBatis返回多个结果集</title>
    <link href="https://www.zhuqiaolun.com/2021/03/1615802317183/1615802317183/"/>
    <id>https://www.zhuqiaolun.com/2021/03/1615802317183/1615802317183/</id>
    <published>2021-03-15T09:58:37.000Z</published>
    <updated>2021-03-15T10:58:55.582Z</updated>
    
    <content type="html"><![CDATA[<p>MyBatis在查询时可以将单一的结果集并列查询组成多结果集；<br>如：多重List&lt;Map&lt;String,Object&gt;&gt;格式，Object可再次为 List&lt;Map&lt;String,Object&gt;&gt;结构</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JSON"><figure class="iseeu highlight /json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    {</span><br><span class="line">        <span class="attr">"userName"</span>: <span class="string">"张三"</span>,</span><br><span class="line">        <span class="attr">"userCode"</span>: <span class="string">"RBXLWCzGcqDncROd90Jd"</span>,</span><br><span class="line">        <span class="attr">"userRole"</span>: [</span><br><span class="line">            {</span><br><span class="line">                <span class="attr">"roleCode"</span>: <span class="string">"test1"</span>,</span><br><span class="line">                <span class="attr">"userCode"</span>: <span class="string">"RBXLWCzGcqDncROd90Jd"</span></span><br><span class="line">            },</span><br><span class="line">            {</span><br><span class="line">                <span class="attr">"roleCode"</span>: <span class="string">"test2"</span>,</span><br><span class="line">                <span class="attr">"userCode"</span>: <span class="string">"RBXLWCzGcqDncROd90Jd"</span></span><br><span class="line">            }</span><br><span class="line">        ]</span><br><span class="line">    }</span><br><span class="line">]</span><br></pre></td></tr></tbody></table></figure></div><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>xxMapper.xml：<br>xml中以userCode为连接，collection的property属性值为二级key</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"testResultMap"</span> <span class="attr">type</span>=<span class="string">"java.util.Map"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">"userCode"</span> <span class="attr">column</span>=<span class="string">"user_Code"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"userName"</span> <span class="attr">column</span>=<span class="string">"user_Name"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"userRemark"</span> <span class="attr">column</span>=<span class="string">"user_Remark"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"userRole"</span> <span class="attr">javaType</span>=<span class="string">"list"</span> <span class="attr">ofType</span>=<span class="string">"map"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">"roleCode"</span> <span class="attr">column</span>=<span class="string">"role_Code"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"userCode"</span> <span class="attr">column</span>=<span class="string">"user_Code"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"roleName"</span> <span class="attr">column</span>=<span class="string">"role_Name"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"roleRemark"</span> <span class="attr">column</span>=<span class="string">"role_Remark"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectTestListResultMap"</span>  <span class="attr">parameterType</span>=<span class="string">"map"</span> <span class="attr">resultMap</span>=<span class="string">"testResultMap"</span>&gt;</span></span><br><span class="line">    SELECT</span><br><span class="line">    test_user.user_Code,</span><br><span class="line">    test_user.user_Name,</span><br><span class="line">    test_user.user_Remark,</span><br><span class="line">    test_role.role_Code,</span><br><span class="line">    test_role.role_Name,</span><br><span class="line">    test_role.role_Remark,</span><br><span class="line">    test_role.user_Code</span><br><span class="line">    FROM</span><br><span class="line">    test_user</span><br><span class="line">    LEFT JOIN test_role ON test_role.user_Code = test_user.user_Code</span><br><span class="line">    WHERE</span><br><span class="line">    test_user.user_Code IN (</span><br><span class="line">    SELECT</span><br><span class="line">    test_role.user_Code</span><br><span class="line">    FROM</span><br><span class="line">    test_role</span><br><span class="line">    WHERE</span><br><span class="line">    test_role.user_Code = test_user.user_Code</span><br><span class="line">    GROUP BY</span><br><span class="line">    test_role.user_Code</span><br><span class="line">    )</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></div><p>xxMapper.java：</p><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 查询列表信息</span><br><span class="line"> * @param params 参数</span><br><span class="line"> * @return 返回</span><br><span class="line"> */</span><br><span class="line">List&lt;Map&lt;String, Object&gt;&gt; selectTestListResultMap(@Param("params") Map&lt;String, Object&gt; params);</span><br></pre></td></tr></tbody></table></figure><p>结果集：</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JSON"><figure class="iseeu highlight /json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    {</span><br><span class="line">        <span class="attr">"userRemark"</span>: <span class="string">"备注用户"</span>,</span><br><span class="line">        <span class="attr">"userName"</span>: <span class="string">"张三"</span>,</span><br><span class="line">        <span class="attr">"userRole"</span>: [</span><br><span class="line">            {</span><br><span class="line">                <span class="attr">"roleRemark"</span>: <span class="string">"备注权限"</span>,</span><br><span class="line">                <span class="attr">"roleCode"</span>: <span class="string">"test1"</span>,</span><br><span class="line">                <span class="attr">"roleName"</span>: <span class="string">"a"</span>,</span><br><span class="line">                <span class="attr">"userCode"</span>: <span class="string">"RBXLWCzGcqDncROd90Jd"</span></span><br><span class="line">            },</span><br><span class="line">            {</span><br><span class="line">                <span class="attr">"roleRemark"</span>: <span class="string">"备注权限"</span>,</span><br><span class="line">                <span class="attr">"roleCode"</span>: <span class="string">"test2"</span>,</span><br><span class="line">                <span class="attr">"roleName"</span>: <span class="string">"b"</span>,</span><br><span class="line">                <span class="attr">"userCode"</span>: <span class="string">"RBXLWCzGcqDncROd90Jd"</span></span><br><span class="line">            }</span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">"userCode"</span>: <span class="string">"RBXLWCzGcqDncROd90Jd"</span></span><br><span class="line">    },</span><br><span class="line">    {</span><br><span class="line">        <span class="attr">"userRemark"</span>: <span class="string">"备注用户"</span>,</span><br><span class="line">        <span class="attr">"userName"</span>: <span class="string">"李四"</span>,</span><br><span class="line">        <span class="attr">"userRole"</span>: [</span><br><span class="line">            {</span><br><span class="line">                <span class="attr">"roleRemark"</span>: <span class="string">"备注权限"</span>,</span><br><span class="line">                <span class="attr">"roleCode"</span>: <span class="string">"test3"</span>,</span><br><span class="line">                <span class="attr">"roleName"</span>: <span class="string">"c"</span>,</span><br><span class="line">                <span class="attr">"userCode"</span>: <span class="string">"TALKA0I56vYUp2cVaczZ"</span></span><br><span class="line">            },</span><br><span class="line">            {</span><br><span class="line">                <span class="attr">"roleRemark"</span>: <span class="string">"备注权限"</span>,</span><br><span class="line">                <span class="attr">"roleCode"</span>: <span class="string">"test4"</span>,</span><br><span class="line">                <span class="attr">"roleName"</span>: <span class="string">"d"</span>,</span><br><span class="line">                <span class="attr">"userCode"</span>: <span class="string">"TALKA0I56vYUp2cVaczZ"</span></span><br><span class="line">            },</span><br><span class="line">            {</span><br><span class="line">                <span class="attr">"roleRemark"</span>: <span class="string">"备注权限"</span>,</span><br><span class="line">                <span class="attr">"roleCode"</span>: <span class="string">"test5"</span>,</span><br><span class="line">                <span class="attr">"roleName"</span>: <span class="string">"e"</span>,</span><br><span class="line">                <span class="attr">"userCode"</span>: <span class="string">"TALKA0I56vYUp2cVaczZ"</span></span><br><span class="line">            }</span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">"userCode"</span>: <span class="string">"TALKA0I56vYUp2cVaczZ"</span></span><br><span class="line">    },</span><br><span class="line">    {</span><br><span class="line">        <span class="attr">"userRemark"</span>: <span class="string">"备注用户"</span>,</span><br><span class="line">        <span class="attr">"userName"</span>: <span class="string">"王五"</span>,</span><br><span class="line">        <span class="attr">"userRole"</span>: [</span><br><span class="line">            {</span><br><span class="line">                <span class="attr">"roleRemark"</span>: <span class="string">"备注权限"</span>,</span><br><span class="line">                <span class="attr">"roleCode"</span>: <span class="string">"test6"</span>,</span><br><span class="line">                <span class="attr">"roleName"</span>: <span class="string">"f"</span>,</span><br><span class="line">                <span class="attr">"userCode"</span>: <span class="string">"EMbvTsuedRjItaD0aZzq"</span></span><br><span class="line">            },</span><br><span class="line">            {</span><br><span class="line">                <span class="attr">"roleRemark"</span>: <span class="string">"备注权限"</span>,</span><br><span class="line">                <span class="attr">"roleCode"</span>: <span class="string">"test7"</span>,</span><br><span class="line">                <span class="attr">"roleName"</span>: <span class="string">"g"</span>,</span><br><span class="line">                <span class="attr">"userCode"</span>: <span class="string">"EMbvTsuedRjItaD0aZzq"</span></span><br><span class="line">            }</span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">"userCode"</span>: <span class="string">"EMbvTsuedRjItaD0aZzq"</span></span><br><span class="line">    }</span><br><span class="line">]</span><br></pre></td></tr></tbody></table></figure></div><p>表：</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for test_role</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `test_role`;</span><br><span class="line">CREATE TABLE `test_role` (</span><br><span class="line">  `tr_PKeyId` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键ID',</span><br><span class="line">  `role_Code` varchar(32) DEFAULT NULL COMMENT '角色代码',</span><br><span class="line">  `role_Name` varchar(32) DEFAULT NULL COMMENT '角色名称',</span><br><span class="line">  `user_Code` varchar(32) DEFAULT NULL COMMENT '用户代码',</span><br><span class="line">  `role_Remark` varchar(100) DEFAULT NULL COMMENT '备注',</span><br><span class="line">  PRIMARY KEY (`tr_PKeyId`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=25 DEFAULT CHARSET=utf8 COMMENT='角色表';</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Records of test_role</span><br><span class="line">-- ----------------------------</span><br><span class="line">INSERT INTO `test_role` VALUES ('16', 'test1', 'a', 'RBXLWCzGcqDncROd90Jd', '备注权限');</span><br><span class="line">INSERT INTO `test_role` VALUES ('19', 'test2', 'b', 'RBXLWCzGcqDncROd90Jd', '备注权限');</span><br><span class="line">INSERT INTO `test_role` VALUES ('20', 'test3', 'c', 'TALKA0I56vYUp2cVaczZ', '备注权限');</span><br><span class="line">INSERT INTO `test_role` VALUES ('21', 'test4', 'd', 'TALKA0I56vYUp2cVaczZ', '备注权限');</span><br><span class="line">INSERT INTO `test_role` VALUES ('22', 'test5', 'e', 'TALKA0I56vYUp2cVaczZ', '备注权限');</span><br><span class="line">INSERT INTO `test_role` VALUES ('23', 'test6', 'f', 'EMbvTsuedRjItaD0aZzq', '备注权限');</span><br><span class="line">INSERT INTO `test_role` VALUES ('24', 'test7', 'g', 'EMbvTsuedRjItaD0aZzq', '备注权限');</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for test_user</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `test_user`;</span><br><span class="line">CREATE TABLE `test_user` (</span><br><span class="line">  `tu_PKeyId` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键ID',</span><br><span class="line">  `user_Name` varchar(32) DEFAULT NULL COMMENT '用户名称',</span><br><span class="line">  `user_Code` varchar(32) DEFAULT NULL COMMENT '用户代码',</span><br><span class="line">  `user_Remark` varchar(100) DEFAULT NULL COMMENT '备注',</span><br><span class="line">  PRIMARY KEY (`tu_PKeyId`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=utf8 COMMENT='用户表';</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Records of test_user</span><br><span class="line">-- ----------------------------</span><br><span class="line">INSERT INTO `test_user` VALUES ('10', '张三', 'RBXLWCzGcqDncROd90Jd', '备注用户');</span><br><span class="line">INSERT INTO `test_user` VALUES ('11', '李四', 'TALKA0I56vYUp2cVaczZ', '备注用户');</span><br><span class="line">INSERT INTO `test_user` VALUES ('12', '王五', 'EMbvTsuedRjItaD0aZzq', '备注用户');</span><br><span class="line">INSERT INTO `test_user` VALUES ('13', '赵六', 'GosZVJuSCA70TmeRnBJO', '备注用户');</span><br></pre></td></tr></tbody></table></figure></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      MyBatis返回多个结果集
    
    </summary>
    
    
      <category term="MyBatis" scheme="https://www.zhuqiaolun.com/categories/MyBatis/"/>
    
    
      <category term="Java" scheme="https://www.zhuqiaolun.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客的一些内置写法</title>
    <link href="https://www.zhuqiaolun.com/2021/03/1615800535123/1615800535123/"/>
    <id>https://www.zhuqiaolun.com/2021/03/1615800535123/1615800535123/</id>
    <published>2021-03-15T09:28:55.000Z</published>
    <updated>2021-03-15T09:51:14.713Z</updated>
    
    <content type="html"><![CDATA[<p>在hexo中发表文章时需要相互引用，以下为一些内置写法，有些需要先安装modiles</p><p>1.引用内部图片</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">在根目录下执行如下命令</span><br><span class="line">  npm install hexo-asset-image</span><br><span class="line">  </span><br><span class="line">此时再执行命令 </span><br><span class="line">  hexo new article_name 创建新的文章，在 source/_posts 中会生成文章 post_name.md 和同名文件夹 post_name,</span><br><span class="line"></span><br><span class="line">我们将文章中所使用到的将图片资源均放在 post_name 中，这时就可以在文章中使用相对路径引用图片资源了</span><br><span class="line">[img_name](img_name.jpg) #文章中的图片资源路径格式</span><br><span class="line">如：[20210315171503](1615799438937/20210315171503.png)</span><br></pre></td></tr></tbody></table></figure></div><p>2.引用内部链接</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[标题]({% post_path %}/访问路径)</span><br><span class="line">如：[标题]({% post_path %}/2021/03/1615800535123/1615800535123/)</span><br></pre></td></tr></tbody></table></figure></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      hexo博客的一些内置写法
    
    </summary>
    
    
      <category term="Blog" scheme="https://www.zhuqiaolun.com/categories/Blog/"/>
    
    
      <category term="hexo" scheme="https://www.zhuqiaolun.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>对MyBatis-Plus3.x的插件配置使用</title>
    <link href="https://www.zhuqiaolun.com/2021/03/1615799438937/1615799438937/"/>
    <id>https://www.zhuqiaolun.com/2021/03/1615799438937/1615799438937/</id>
    <published>2021-03-15T09:10:38.000Z</published>
    <updated>2021-03-16T02:52:44.883Z</updated>
    
    <content type="html"><![CDATA[<p>MyBatis-Plus 是自带分页插件的Page，可用查询SQL并列使用<br><img src="/2021/03/1615799438937/1615799438937/20210315171503.png" alt="20210315171503"></p><h3 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h3><p>添加依赖</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 连接数据库 start --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 数据库 连接 、事务--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 数据库 mybatis--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 数据库 mysql--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 连接数据库 end --&gt;</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>配置bean使用插件</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import com.baomidou.mybatisplus.annotation.DbType;</span><br><span class="line">import com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor;</span><br><span class="line">import org.springframework.context.annotation.Bean;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line">import org.springframework.transaction.annotation.EnableTransactionManagement;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @className: MybatisPlusConfig.java</span><br><span class="line"> * @description:  MyBatis-Plus的插件配置</span><br><span class="line"> * @author: Demon</span><br><span class="line"> * @date 2020/8/25 11:24</span><br><span class="line"> */</span><br><span class="line">@Configuration</span><br><span class="line">@EnableTransactionManagement</span><br><span class="line">public class MybatisPlusConfig {</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 分页插件</span><br><span class="line">     * paginationInterceptor.setLimit(你的最大单页限制数量，默认 500 条，小于 0 如 -1 不受限制);</span><br><span class="line">     */</span><br><span class="line">    @Bean</span><br><span class="line">    public PaginationInterceptor paginationInterceptor() {</span><br><span class="line">        PaginationInterceptor paginationInterceptor = new PaginationInterceptor();</span><br><span class="line">        paginationInterceptor.setLimit(-1);</span><br><span class="line">        // 设置数据库需要根据mp版本使用set方法,以下为3.3.2</span><br><span class="line">        paginationInterceptor.setDbType(DbType.MYSQL);</span><br><span class="line">        // 设置数据库需要根据mp版本使用set方法,以下为3.2.0</span><br><span class="line">        paginationInterceptor.setDialectType(DbType.MYSQL.getDb());</span><br><span class="line">        return paginationInterceptor;</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>xxMapper.xml：</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getList"</span> <span class="attr">parameterType</span>=<span class="string">"map"</span> <span class="attr">resultType</span>=<span class="string">"map"</span> &gt;</span></span><br><span class="line">    SELECT * FROM system_user</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></div><p>xxMapper.java：</p><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 查询列表信息(分页)</span><br><span class="line"> * @param page   分页标志</span><br><span class="line"> * @param params 参数</span><br><span class="line"> * @return 返回</span><br><span class="line"> */</span><br><span class="line">Page&lt;Map&lt;String, Object&gt;&gt; getListPage(IPage&lt;Map&lt;String, Object&gt;&gt; page, @Param("params") Map&lt;String, Object&gt; params);</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 查询列表信息</span><br><span class="line"> * @param params 参数</span><br><span class="line"> * @return 返回</span><br><span class="line"> */</span><br><span class="line">List&lt;Map&lt;String,Object&gt;&gt; getList(@Param("params") Map&lt;String,Object&gt; params);</span><br></pre></td></tr></tbody></table></figure><p>xxService.java:</p><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 查询列表信息(分页)</span><br><span class="line"> * @param current 每页数</span><br><span class="line"> * @param size 当前页</span><br><span class="line"> * @param map 参数</span><br><span class="line"> * @return 返回</span><br><span class="line"> */</span><br><span class="line">Page&lt;Map&lt;String, Object&gt;&gt; getListPage(long current, long size, Map&lt;String, Object&gt; map);</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 查询列表信息</span><br><span class="line"> * @param map 参数</span><br><span class="line"> * @return 返回</span><br><span class="line"> */</span><br><span class="line">List&lt;Map&lt;String,Object&gt;&gt; getList(Map&lt;String, Object&gt; map);</span><br></pre></td></tr></tbody></table></figure><p>xxServiceImpl.java:</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@Override</span><br><span class="line">public Page&lt;Map&lt;String, Object&gt;&gt; getListPage(long current, long size, Map&lt;String, Object&gt; map) {</span><br><span class="line">    IPage&lt;Map&lt;String, Object&gt;&gt; page = new Page&lt;&gt;(current, size);</span><br><span class="line">    return this.baseMapper.getListPage(page, map);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public List&lt;Map&lt;String,Object&gt;&gt; getList(Map&lt;String,Object&gt; map) {</span><br><span class="line">    return this.baseMapper.getList(map);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p>xxController.java:</p><ul><li>已分页查询<div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">long current = Long.parseLong(jsonParam.getString("current"));</span><br><span class="line">long size = Long.parseLong(jsonParam.getString("size"));</span><br><span class="line">Map<span class="tag">&lt;<span class="name">String,</span> <span class="attr">Object</span>&gt;</span> map = new LinkedHashMap<span class="tag">&lt;&gt;</span>();</span><br><span class="line">Page&lt;Map&lt;String, Object&gt;&gt; serviceListPage = systemService.getListPage(current,size,map);</span><br><span class="line">JSONObject jsonObject = ListUtil.getData(serviceListPage);</span><br><span class="line">System.out.println(jsonObject);</span><br></pre></td></tr></tbody></table></figure></div></li><li>不分页查询<div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Map<span class="tag">&lt;<span class="name">String,</span> <span class="attr">Object</span>&gt;</span> map = new LinkedHashMap<span class="tag">&lt;&gt;</span>();</span><br><span class="line">List&lt;Map&lt;String, Object&gt;&gt; serviceList = systemService.getJobList(map);</span><br><span class="line">System.out.println(serviceList);</span><br></pre></td></tr></tbody></table></figure></div></li></ul><p>ListUtil：</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">import com.alibaba.fastjson.JSONObject;</span><br><span class="line">import com.baomidou.mybatisplus.extension.plugins.pagination.Page;</span><br><span class="line">import java.util.Map;</span><br><span class="line">/**</span><br><span class="line"> * @author: Demon</span><br><span class="line"> * @date 2021/2/25 17:08</span><br><span class="line"> * @description: 分页列表数据</span><br><span class="line"> */</span><br><span class="line">public class ListUtil {</span><br><span class="line"></span><br><span class="line">    public static JSONObject getData(Page&lt;Map&lt;String, Object&gt;&gt; listPage) {</span><br><span class="line">        JSONObject responseBean = new JSONObject(true);</span><br><span class="line">        //当前页码</span><br><span class="line">        responseBean.put("current", listPage.getCurrent());</span><br><span class="line">        //当前页条数</span><br><span class="line">        responseBean.put("size", listPage.getSize());</span><br><span class="line">        //总共条数</span><br><span class="line">        responseBean.put("total", listPage.getTotal());</span><br><span class="line">        //总共页数</span><br><span class="line">        responseBean.put("page", listPage.getPages());</span><br><span class="line">        //当前页数据</span><br><span class="line">        responseBean.put("data", listPage.getRecords());</span><br><span class="line">        //是否有上一页</span><br><span class="line">        responseBean.put("hasPrevious", listPage.hasPrevious());</span><br><span class="line">        //是否有下一页</span><br><span class="line">        responseBean.put("hasNext", listPage.hasNext());</span><br><span class="line">        return responseBean;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      MyBatis-Plus的插件配置使用
    
    </summary>
    
    
      <category term="MyBatis" scheme="https://www.zhuqiaolun.com/categories/MyBatis/"/>
    
    
      <category term="Java" scheme="https://www.zhuqiaolun.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java自定义异常</title>
    <link href="https://www.zhuqiaolun.com/2021/03/1615440974493/1615440974493/"/>
    <id>https://www.zhuqiaolun.com/2021/03/1615440974493/1615440974493/</id>
    <published>2021-03-11T05:36:14.000Z</published>
    <updated>2021-03-11T06:01:34.190Z</updated>
    
    <content type="html"><![CDATA[<p>作用：定义异常来生声明异常，保证程序可以准确捕获异常。</p><p>自定义异常继承类有3中：RuntimeException、Exception、Throwable<br>一般会选择继承Exception和RuntimeException，如果调用者一定要处理抛出的异常且没有要求，就继承RuntimeException。</p><p>定义异常</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * @author: Demon</span><br><span class="line"> * @date 2021/3/5 14:44</span><br><span class="line"> * @description: 空异常</span><br><span class="line"> */</span><br><span class="line">public class EmptyException extends RuntimeException {</span><br><span class="line"></span><br><span class="line">    private String code;</span><br><span class="line">    </span><br><span class="line">    public EmptyException(String code, String message) {</span><br><span class="line">        super(message);</span><br><span class="line">        this.code = code;</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    public String getCode() {</span><br><span class="line">        return code;</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    public void setCode(String code) {</span><br><span class="line">        this.code = code;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p>使用异常</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">throw new EmptyException("40004", "参数不能为空");</span><br></pre></td></tr></tbody></table></figure></div><p>捕获异常</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">try {</span><br><span class="line">    System.out.println("业务处理···");</span><br><span class="line">}catch (EmptyException e){</span><br><span class="line">    System.out.println("捕获自定义异常···");</span><br><span class="line">    e.getCode();</span><br><span class="line">    e.getMessage();</span><br><span class="line">}catch (Exception e){</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">    System.out.println("捕获抛出的异常···");</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      Java自定义异常
    
    </summary>
    
    
      <category term="J-Tools" scheme="https://www.zhuqiaolun.com/categories/J-Tools/"/>
    
    
      <category term="Java" scheme="https://www.zhuqiaolun.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>删除没用的本地Jar</title>
    <link href="https://www.zhuqiaolun.com/2021/03/1615374410736/1615374410736/"/>
    <id>https://www.zhuqiaolun.com/2021/03/1615374410736/1615374410736/</id>
    <published>2021-03-10T11:06:50.000Z</published>
    <updated>2021-03-15T08:56:25.108Z</updated>
    
    <content type="html"><![CDATA[<p>有时候maven下载的jar不完整或者是错误，则此时需要删除多余的jar</p><p>引入依赖</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></div><p>完整代码</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import java.io.File;</span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.util.Collection;</span><br><span class="line"></span><br><span class="line">import org.apache.commons.io.FileUtils;</span><br><span class="line">import org.apache.commons.io.filefilter.DirectoryFileFilter;</span><br><span class="line">import org.apache.commons.io.filefilter.RegexFileFilter;</span><br><span class="line">import org.apache.commons.io.filefilter.TrueFileFilter;</span><br><span class="line"></span><br><span class="line">public class 删除没用的Jar {</span><br><span class="line"></span><br><span class="line">public static void main(String[] args) {</span><br><span class="line"></span><br><span class="line">System.out.println("执行开始···");</span><br><span class="line">String filePath = "D:\\apache\\Repositories\\Maven";</span><br><span class="line">deleteFile(filePath,true);</span><br><span class="line">System.out.println();</span><br><span class="line">deleteDir(filePath,true);</span><br><span class="line">System.out.println("执行完成！！！");</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">private static void deleteFile(String filePath,boolean flag){</span><br><span class="line">RegexFileFilter regexFileFilter = new RegexFileFilter(".*(lastUpdated).*");</span><br><span class="line">Collection<span class="tag">&lt;<span class="name">File</span>&gt;</span> listFiles1 = FileUtils.listFiles(new File(filePath),regexFileFilter, DirectoryFileFilter.INSTANCE);</span><br><span class="line">for (File file : listFiles1) {</span><br><span class="line">try {</span><br><span class="line">System.out.println(file.getCanonicalPath());</span><br><span class="line">if(flag){</span><br><span class="line">FileUtils.forceDelete(file);</span><br><span class="line">}</span><br><span class="line">} catch (IOException e) {</span><br><span class="line">e.printStackTrace();</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">private static void deleteDir(String filePath,boolean flag){</span><br><span class="line">Collection<span class="tag">&lt;<span class="name">File</span>&gt;</span> listFiles1 = FileUtils.listFilesAndDirs(new File(filePath), TrueFileFilter.INSTANCE,DirectoryFileFilter.DIRECTORY);</span><br><span class="line">for (File file : listFiles1) {</span><br><span class="line">try {</span><br><span class="line">if(file.isDirectory()){</span><br><span class="line">if(file.getName().startsWith("$") || file.getName().startsWith("unknown") || file.getName().startsWith("error")){</span><br><span class="line">System.out.println(file.getCanonicalPath());</span><br><span class="line">if(flag){</span><br><span class="line">FileUtils.forceDelete(file);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">} catch (IOException e) {</span><br><span class="line">e.printStackTrace();</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      删除没用的本地Jar
    
    </summary>
    
    
      <category term="J-Tools" scheme="https://www.zhuqiaolun.com/categories/J-Tools/"/>
    
    
      <category term="Java" scheme="https://www.zhuqiaolun.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>谷歌浏览器：下载，插件安装</title>
    <link href="https://www.zhuqiaolun.com/2021/03/1615363585427/1615363585427/"/>
    <id>https://www.zhuqiaolun.com/2021/03/1615363585427/1615363585427/</id>
    <published>2021-03-10T08:06:25.000Z</published>
    <updated>2021-03-10T09:14:35.801Z</updated>
    
    <content type="html"><![CDATA[<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p><a href="https://www.google.cn/intl/zh-CN/chrome/" target="_blank" rel="noopener">谷歌浏览器</a><br><img src="/2021/03/1615363585427/1615363585427/20210310161717.png" alt="20210310161717"></p><h3 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h3><p><a href="https://chrome.zzzmh.cn/#ext" target="_blank" rel="noopener">极简插件</a><br><img src="/2021/03/1615363585427/1615363585427/20210310161745.png" alt="20210310161745"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      谷歌浏览器，下载，插件安装
    
    </summary>
    
    
      <category term="世界" scheme="https://www.zhuqiaolun.com/categories/%E4%B8%96%E7%95%8C/"/>
    
    
      <category term="chrome" scheme="https://www.zhuqiaolun.com/tags/chrome/"/>
    
  </entry>
  
  <entry>
    <title>查看jar包的JDK版本</title>
    <link href="https://www.zhuqiaolun.com/2021/03/1615358998628/1615358998628/"/>
    <id>https://www.zhuqiaolun.com/2021/03/1615358998628/1615358998628/</id>
    <published>2021-03-10T06:49:58.000Z</published>
    <updated>2021-03-10T07:45:05.646Z</updated>
    
    <content type="html"><![CDATA[<h3 id="通过版本"><a href="#通过版本" class="headerlink" title="通过版本"></a>通过版本</h3><p>通常在使用Java程序时，需要对JDK版本进行核对，JDK构建版本不等于执行的运行版本，需要通过执行类来辨别</p><ul><li><p>通过反编译工具jd-gui查看清单文件<br><img src="/2021/03/1615358998628/1615358998628/20210310150822.png" alt="20210310150822"></p></li><li><p>通过编译的class文件来查看文件信息<br><img src="/2021/03/1615358998628/1615358998628/20210310151415.png" alt="20210310151415"></p></li></ul><h3 id="通过十六进制"><a href="#通过十六进制" class="headerlink" title="通过十六进制"></a>通过十六进制</h3><ul><li>Notepad++<br>在 Notepad++ 中添加插件：HEX-Editor，点击安装后自动重启<br>需要以十六进制显示时，点击菜单的：【插件】－【Hex-Editor】－【View in Hex】即可<br><img src="/2021/03/1615358998628/1615358998628/20210310154106.png" alt="20210310154106"><br>只看第一行数据，前面8个字节 CA FE BA BE 是固定的，<br>后4个字节 00 00 是次版本号，次版本号后面的4个字节 00 33  是jdk的版本号，如我这里使用的是jdk1.8</li></ul><h3 id="版本查看"><a href="#版本查看" class="headerlink" title="版本查看"></a>版本查看</h3><p>以下为各个JDK版本对应的数值</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">J2SE 8.0 = 52(0x33 hex)</span><br><span class="line">J2SE 7.0 = 51(0x32 hex)</span><br><span class="line">J2SE 6.0 = 50 (0x32 hex)</span><br><span class="line">J2SE 5.0 = 49 (0x31 hex)</span><br><span class="line">JDK 1.4 = 48 (0x30 hex)</span><br><span class="line">JDK 1.3 = 47 (0x2F hex)</span><br><span class="line">JDK 1.2 = 46 (0x2E hex)</span><br><span class="line">JDK 1.1 = 45 (0x2D hex)</span><br></pre></td></tr></tbody></table></figure></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      查看jar包的JDK版本
    
    </summary>
    
    
      <category term="工具" scheme="https://www.zhuqiaolun.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Java" scheme="https://www.zhuqiaolun.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>解决SpringBoot2.x的跨域请求问题,开启跨域</title>
    <link href="https://www.zhuqiaolun.com/2021/03/1614825070134/1614825070134/"/>
    <id>https://www.zhuqiaolun.com/2021/03/1614825070134/1614825070134/</id>
    <published>2021-03-04T02:31:10.000Z</published>
    <updated>2021-03-08T08:07:39.751Z</updated>
    
    <content type="html"><![CDATA[<p>请求错误描述：</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">When allowCredentials is true, allowedOrigins cannot contain the special value "*“since </span><br><span class="line">that cannot be set on the “Access-Control-Allow-Origin” response header. </span><br><span class="line">To allow credentials to a set of origins, list them explicitly or consider using"allowedOriginPatterns” instead.</span><br></pre></td></tr></tbody></table></figure></div><p>SpringBoot2.3.x</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">@Configuration</span><br><span class="line">public class WebMvcConfig implements WebMvcConfigurer {</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void addCorsMappings(CorsRegistry registry) {</span><br><span class="line">        registry</span><br><span class="line">                // 设置允许跨域的路由</span><br><span class="line">                .addMapping("/**")</span><br><span class="line">                // 设置允许跨域请求的域名</span><br><span class="line">                .allowedOrigins("*")</span><br><span class="line">                // 是否允许证书（cookies）</span><br><span class="line">                .allowCredentials(true)</span><br><span class="line">                // 设置允许的方法</span><br><span class="line">                .allowedMethods("GET", "POST", "DELETE", "PUT")</span><br><span class="line">                // 跨域允许时间</span><br><span class="line">                .maxAge(3600);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p>SpringBoot2.4.x</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">@Configuration</span><br><span class="line">public class WebMvcConfig implements WebMvcConfigurer {</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void addCorsMappings(CorsRegistry registry) {</span><br><span class="line">        registry</span><br><span class="line">                // 设置允许跨域的路由</span><br><span class="line">                .addMapping("/**")</span><br><span class="line">                // 设置允许跨域请求的域名</span><br><span class="line">                .allowedOriginPatterns("*")</span><br><span class="line">                // 是否允许证书（cookies）</span><br><span class="line">                .allowCredentials(true)</span><br><span class="line">                // 设置允许的方法</span><br><span class="line">                .allowedMethods("GET", "POST", "DELETE", "PUT")</span><br><span class="line">                // 跨域允许时间</span><br><span class="line">                .maxAge(3600);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      解决SpringBoot的跨域请求问题
    
    </summary>
    
    
      <category term="SpringBoot" scheme="https://www.zhuqiaolun.com/categories/SpringBoot/"/>
    
    
      <category term="Java" scheme="https://www.zhuqiaolun.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>使用 MultipartFile[] 做多文件上传的功能</title>
    <link href="https://www.zhuqiaolun.com/2021/03/1614764345833/1614764345833/"/>
    <id>https://www.zhuqiaolun.com/2021/03/1614764345833/1614764345833/</id>
    <published>2021-03-03T09:39:05.000Z</published>
    <updated>2021-03-10T08:01:51.489Z</updated>
    
    <content type="html"><![CDATA[<h3 id="控制器"><a href="#控制器" class="headerlink" title="控制器"></a>控制器</h3><p>文件属性名： name = file<br>参数非必传：required = false</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">@PostMapping(value = "/upload",consumes="multipart/form-data")</span><br><span class="line">public String fileUpload(@RequestParam(value = "file",required = false) MultipartFile[] multipartFiles,</span><br><span class="line">                         @RequestParam(value = "username",required = false)String username,</span><br><span class="line">                         @RequestParam(value = "password",required = false)String password) throws IOException{</span><br><span class="line">    List&lt;Map&lt;String,Object&gt;&gt; fileList = new ArrayList&lt;&gt;();</span><br><span class="line">    for (MultipartFile multipartFile : multipartFiles) {</span><br><span class="line">        String fileName = multipartFile.getOriginalFilename();</span><br><span class="line">        assert fileName != null;</span><br><span class="line">        byte[] bytes = multipartFile.getBytes();</span><br><span class="line">        String fileExt = FilenameUtils.getExtension(fileName);</span><br><span class="line">        Map<span class="tag">&lt;<span class="name">String,Object</span>&gt;</span> map = new LinkedHashMap<span class="tag">&lt;&gt;</span>();</span><br><span class="line">        map.put("fileName",fileName);</span><br><span class="line">        map.put("fileExt",fileExt);</span><br><span class="line">        map.put("fileSize",bytes.length);</span><br><span class="line">        map.put("username",username);</span><br><span class="line">        map.put("password",password);</span><br><span class="line">        //转存，不需要进行IO流关闭处理</span><br><span class="line">        multipartFile.transferTo(new File("D:/dest.txt"));</span><br><span class="line">        fileList.add(map);</span><br><span class="line">    }</span><br><span class="line">    return JSON.toJSONString(fileList);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h3 id="请求示例"><a href="#请求示例" class="headerlink" title="请求示例"></a>请求示例</h3><ul><li><p>Java模拟请求</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">@Test</span><br><span class="line">public void 多文件上传() {</span><br><span class="line">    File file1 = new File("D:\\test\\1234.xlsx");</span><br><span class="line">    File file2 = new File("D:\\test\\5678.xlsx");</span><br><span class="line">    String url = "https://www.zhuqiaolun.com/weixinz/api/test/upload";</span><br><span class="line">    HttpHeaders headers = new HttpHeaders();</span><br><span class="line">    headers.set("Content-Type", "multipart/form-data");</span><br><span class="line">    MultiValueMap<span class="tag">&lt;<span class="name">String,</span> <span class="attr">Object</span>&gt;</span> params = new LinkedMultiValueMap<span class="tag">&lt;&gt;</span>();</span><br><span class="line">    params.add("file", new FileSystemResource(file1));</span><br><span class="line">    params.add("file", new FileSystemResource(file2));</span><br><span class="line">    params.add("username","admin");</span><br><span class="line">    params.add("password","123456");</span><br><span class="line">    HttpEntity&lt;MultiValueMap&lt;String, Object&gt;&gt; httpEntity = new HttpEntity&lt;&gt;(params, headers);</span><br><span class="line">    ResponseEntity<span class="tag">&lt;<span class="name">String</span>&gt;</span> responseEntity = restTemplate.postForEntity(url, httpEntity, String.class);</span><br><span class="line">    System.out.println(responseEntity.getStatusCodeValue());</span><br><span class="line">    System.out.println(responseEntity.getBody());</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div></li><li><p>Form表单提交</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>多文件上传<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"https://www.zhuqiaolun.com/weixinz/api/test/upload"</span></span></span><br><span class="line"><span class="tag">     <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"moreFile"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">placeholder</span>=<span class="string">"用户名"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"admin"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">placeholder</span>=<span class="string">"密码"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"123456"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span>上传<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></div></li><li><p>Ajax表单提交</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>多文件上传<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">"moreFileForm"</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">placeholder</span>=<span class="string">"用户名"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"admin"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">placeholder</span>=<span class="string">"密码"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"123456"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">onclick</span>=<span class="string">"moreFileSub()"</span>&gt;</span>ajax上传<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"result"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://libs.baidu.com/jquery/2.1.1/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript"><span class="function"><span class="keyword">function</span> <span class="title">moreFileSub</span><span class="params">()</span></span>{</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> formData = <span class="keyword">new</span> FormData($(<span class="string">"#moreFileForm"</span>)[<span class="number">0</span>]);</span></span><br><span class="line"><span class="javascript">    $.ajax({</span></span><br><span class="line"><span class="actionscript">        url : <span class="string">"https://www.zhuqiaolun.com/weixinz/api/test/upload"</span>,</span></span><br><span class="line"><span class="actionscript">        type : <span class="string">'POST'</span>,</span></span><br><span class="line">        data : formData,</span><br><span class="line"><span class="actionscript">        <span class="comment">// 告诉jQuery不要去处理发送的数据</span></span></span><br><span class="line"><span class="actionscript">        processData : <span class="literal">false</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 告诉jQuery不要去设置Content-Type请求头</span></span></span><br><span class="line"><span class="actionscript">        contentType : <span class="literal">false</span>,</span></span><br><span class="line"><span class="javascript">        <span class="keyword">async</span> : <span class="literal">false</span>,</span></span><br><span class="line"><span class="actionscript">        dataType : <span class="string">"json"</span>,</span></span><br><span class="line"><span class="actionscript">        success : <span class="function"><span class="keyword">function</span><span class="params">(result)</span> </span>{</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(result);</span></span><br><span class="line"><span class="javascript">            $(<span class="string">"#result"</span>).text(<span class="built_in">JSON</span>.stringify(result))</span></span><br><span class="line">        }</span><br><span class="line">    });</span><br><span class="line">}</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></div></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      使用 MultipartFile[] 做多文件上传的功能
    
    </summary>
    
    
      <category term="SpringBoot" scheme="https://www.zhuqiaolun.com/categories/SpringBoot/"/>
    
    
      <category term="Java" scheme="https://www.zhuqiaolun.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot的restTemplate的使用</title>
    <link href="https://www.zhuqiaolun.com/2021/03/1614741214844/1614741214844/"/>
    <id>https://www.zhuqiaolun.com/2021/03/1614741214844/1614741214844/</id>
    <published>2021-03-03T03:13:34.000Z</published>
    <updated>2021-03-03T10:56:48.437Z</updated>
    
    <content type="html"><![CDATA[<p><a href="/2020/06/1592881660483/1592881660483/">RestTemplate配置</a></p><h3 id="Headers"><a href="#Headers" class="headerlink" title="Headers"></a>Headers</h3><ul><li>设置<div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">HttpHeaders headers = new HttpHeaders();</span><br><span class="line">// Text</span><br><span class="line">headers.set("Content-Type", "application/json;charset=UTF-8");</span><br><span class="line">// File</span><br><span class="line">headers.set("Content-Type", "multipart/form-data");</span><br><span class="line">// Form</span><br><span class="line">headers.set("Content-Type", "application/x-www-form-urlencoded");</span><br></pre></td></tr></tbody></table></figure></div></li></ul><h3 id="Get"><a href="#Get" class="headerlink" title="Get"></a>Get</h3><ul><li>query<br>eg：<br><a href="https://www.zhuqiaolun.com/weixinz/api/test/get?username=demon&amp;password=123456">https://www.zhuqiaolun.com/weixinz/api/test/get?username=demon&amp;password=123456</a><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//将请求头部和参数合成一个请求</span><br><span class="line">UriComponentsBuilder builder = UriComponentsBuilder.fromHttpUrl(url);</span><br><span class="line">builder.queryParam("username",username);</span><br><span class="line">builder.queryParam("password",password);</span><br><span class="line">//将请求头部和参数合成一个请求</span><br><span class="line">HttpEntity<span class="php"><span class="meta">&lt;?</span>&gt; httpEntity = <span class="keyword">new</span> HttpEntity&lt;&gt;(headers);</span></span><br><span class="line"><span class="php">restTemplate.exchange(builder.build().encode().toUri(), HttpMethod.GET, httpEntity, String<span class="class">.<span class="keyword">class</span>);</span></span></span><br></pre></td></tr></tbody></table></figure></div></li></ul><h3 id="Post"><a href="#Post" class="headerlink" title="Post"></a>Post</h3><p>eg：<br><a href="https://www.zhuqiaolun.com/weixinz/api/test/post?username=demon&amp;password=123456">https://www.zhuqiaolun.com/weixinz/api/test/post?username=demon&amp;password=123456</a><br>body：{“username”:”demon”}</p><ul><li><p>application/json</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">JsonNodeFactory jsonNodeFactory = JsonNodeFactory.instance;</span><br><span class="line">ObjectNode params = jsonNodeFactory.objectNode();</span><br><span class="line">{</span><br><span class="line">    params.put("username", username);</span><br><span class="line">    params.put("password", password);</span><br><span class="line">}</span><br><span class="line">//将请求头部和参数合成一个请求</span><br><span class="line">System.out.println(params.toString());</span><br><span class="line">HttpEntity<span class="tag">&lt;<span class="name">String</span>&gt;</span> httpEntity = new HttpEntity<span class="tag">&lt;&gt;</span>(params.toString(), headers);</span><br><span class="line">restTemplate.postForEntity(url, httpEntity, String.class);</span><br></pre></td></tr></tbody></table></figure></div></li><li><p>application/x-www-form-urlencoded</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">MultiValueMap<span class="tag">&lt;<span class="name">String,</span> <span class="attr">Object</span>&gt;</span> params = new LinkedMultiValueMap<span class="tag">&lt;&gt;</span>();</span><br><span class="line">params.add("username", username);</span><br><span class="line">params.add("password", password);</span><br><span class="line">HttpEntity&lt;MultiValueMap&lt;String, Object&gt;&gt; httpEntity = new HttpEntity&lt;&gt;(params, headers);</span><br><span class="line">return restTemplate.postForEntity(url, httpEntity, String.class);</span><br></pre></td></tr></tbody></table></figure></div></li><li><p>multipart/form-data</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">MultiValueMap<span class="tag">&lt;<span class="name">String,</span> <span class="attr">Object</span>&gt;</span> params = new LinkedMultiValueMap<span class="tag">&lt;&gt;</span>();</span><br><span class="line">params.add("file", new org.springframework.core.io.FileSystemResource(new java.io.File("AAA")));</span><br><span class="line">HttpEntity&lt;MultiValueMap&lt;String, Object&gt;&gt; httpEntity = new HttpEntity&lt;&gt;(params, headers);</span><br><span class="line">restTemplate.postForEntity(url, httpEntity, String.class);</span><br></pre></td></tr></tbody></table></figure></div></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      SpringBoot的restTemplate的使用
    
    </summary>
    
    
      <category term="SpringBoot" scheme="https://www.zhuqiaolun.com/categories/SpringBoot/"/>
    
    
      <category term="Java" scheme="https://www.zhuqiaolun.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>JavaFx之CheckBox变成单选模式</title>
    <link href="https://www.zhuqiaolun.com/2021/03/1614740320445/1614740320445/"/>
    <id>https://www.zhuqiaolun.com/2021/03/1614740320445/1614740320445/</id>
    <published>2021-03-03T02:58:40.000Z</published>
    <updated>2021-03-03T03:12:06.700Z</updated>
    
    <content type="html"><![CDATA[<p>CheckBox：复选框模式</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">CheckBox checkBox = new CheckBox();</span><br><span class="line">checkBox.setId("checkBox");</span><br><span class="line">checkBox.setUserData("1234");</span><br><span class="line">checkBox.setMaxWidth(30);</span><br><span class="line">checkBox.setOnAction(event -&gt; {</span><br><span class="line">    if (checkBox.isSelected()) {</span><br><span class="line">        checkBox.setSelected(true);</span><br><span class="line">    }</span><br><span class="line">});</span><br></pre></td></tr></tbody></table></figure></div><p>CheckBox：单选框模式，将其他选中的情况变成false</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">CheckBox checkBox = new CheckBox();</span><br><span class="line">checkBox.setId("checkBox");</span><br><span class="line">checkBox.setUserData("1234");</span><br><span class="line">checkBox.setMaxWidth(30);</span><br><span class="line">checkBox.setOnAction(event -&gt; {</span><br><span class="line">    if (checkBox.isSelected()) {</span><br><span class="line">        ObservableList<span class="tag">&lt;<span class="name">Node</span>&gt;</span> contentChildren = content.getChildren();</span><br><span class="line">        if (contentChildren != null &amp;&amp; contentChildren.size() &gt; 0) {</span><br><span class="line">            for (Node node : contentChildren) {</span><br><span class="line">                CheckBox checkBox = (CheckBox) node.lookup("#attrFieldCheckbox");</span><br><span class="line">                checkBox.setSelected(false);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        checkBox.setSelected(true);</span><br><span class="line">    }</span><br><span class="line">});</span><br></pre></td></tr></tbody></table></figure></div><p><a href="/2021/03/1614738290477/1614738290477/">示例应用</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      JavaFx之CheckBox变成单选模式
    
    </summary>
    
    
      <category term="JavaFx" scheme="https://www.zhuqiaolun.com/categories/JavaFx/"/>
    
    
      <category term="CheckBox" scheme="https://www.zhuqiaolun.com/tags/CheckBox/"/>
    
  </entry>
  
  <entry>
    <title>JavaFx之动态添加组件</title>
    <link href="https://www.zhuqiaolun.com/2021/03/1614738290477/1614738290477/"/>
    <id>https://www.zhuqiaolun.com/2021/03/1614738290477/1614738290477/</id>
    <published>2021-03-03T02:24:50.000Z</published>
    <updated>2021-03-03T03:10:12.719Z</updated>
    
    <content type="html"><![CDATA[<p>本例主要是构建动态模板，采用VBox模式，<br>效果如下：<br><img src="/2021/03/1614738290477/1614738290477/20210303103350.png" alt="20210303103350"><br>按钮操作 - 添加栏位<br><img src="/2021/03/1614738290477/1614738290477/20210303103536.png" alt="20210303103536"><br>按钮操作 - 上移<br><img src="/2021/03/1614738290477/1614738290477/20210303103643.png" alt="20210303103643"><br>按钮操作 - 下移<br><img src="/2021/03/1614738290477/1614738290477/20210303103713.png" alt="20210303103713"></p><p>按钮添加鼠标事件setOnMouseClicked</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Button addBtn = new Button("添加栏位");</span><br><span class="line">addBtn.setOnMouseClicked(addBtnMouseClicked());</span><br><span class="line">Button upBtn = new Button("上移");</span><br><span class="line">upBtn.setOnMouseClicked(upBtnMouseClicked());</span><br><span class="line">Button downBtn = new Button("下移");</span><br><span class="line">downBtn.setOnMouseClicked(downBtnMouseClicked());</span><br></pre></td></tr></tbody></table></figure></div><p>将内容面板content添加到滚动面板</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ScrollPane scrollPane = new ScrollPane(content);</span><br><span class="line">scrollPane.setPannable(true);</span><br><span class="line">scrollPane.setStyle("-fx-background-color: #FFF;");</span><br><span class="line">BorderPane.setAlignment(scrollPane,Pos.CENTER);</span><br></pre></td></tr></tbody></table></figure></div><p>寻找面板上的组件，只有类型对应，强转也无报错</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ObservableList<span class="tag">&lt;<span class="name">Node</span>&gt;</span> templateAttrChildren = content.getChildren();</span><br><span class="line">if (templateAttrChildren != null &amp;&amp; templateAttrChildren.size() &gt; 0) {</span><br><span class="line">    for (Node node : templateAttrChildren) {</span><br><span class="line">        CheckBox attrFieldCheckbox = (CheckBox) node.lookup("#attrFieldCheckbox");</span><br><span class="line">        System.out.println(attrFieldCheckbox.getUserData());</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p>移动操作：先获取当前组件对象，通过原始位置index进行remove，在进行位置add</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">上移：当移到最上层时index=1</span><br><span class="line">HBox hBox = (HBox) content.lookup("#" + checkBox.getParent().getId());</span><br><span class="line">int index = content.getChildren().indexOf(hBox);</span><br><span class="line">if (index &gt; 0) {</span><br><span class="line">    content.getChildren().remove(index);</span><br><span class="line">    content.getChildren().add(index - 1, hBox);</span><br><span class="line">}</span><br><span class="line">下移：当移到最下层时index=最大值</span><br><span class="line">HBox hBox = (HBox) content.lookup("#" + checkBox.getParent().getId());</span><br><span class="line">int index = content.getChildren().indexOf(hBox);</span><br><span class="line">if (index <span class="tag">&lt; <span class="attr">content.getChildren</span>()<span class="attr">.size</span>() <span class="attr">-</span> <span class="attr">1</span>) {</span></span><br><span class="line"><span class="tag">    <span class="attr">content.getChildren</span>()<span class="attr">.remove</span>(<span class="attr">index</span>);</span></span><br><span class="line"><span class="tag">    <span class="attr">content.getChildren</span>()<span class="attr">.add</span>(<span class="attr">index</span> + <span class="attr">1</span>, <span class="attr">hBox</span>);</span></span><br><span class="line"><span class="tag">}</span></span><br></pre></td></tr></tbody></table></figure></div><p>事件EventHandler</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">private EventHandler<span class="tag">&lt;<span class="name">MouseEvent</span>&gt;</span> btnMouseClicked(){</span><br><span class="line">    return event -&gt; {</span><br><span class="line">        System.out.println("事件执行");</span><br><span class="line">    };</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p>完整代码</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br></pre></td><td class="code"><pre><span class="line">package sample;</span><br><span class="line"></span><br><span class="line">import javafx.application.Application;</span><br><span class="line">import javafx.collections.FXCollections;</span><br><span class="line">import javafx.collections.ObservableList;</span><br><span class="line">import javafx.event.EventHandler;</span><br><span class="line">import javafx.geometry.Insets;</span><br><span class="line">import javafx.geometry.Pos;</span><br><span class="line">import javafx.scene.Node;</span><br><span class="line">import javafx.scene.Scene;</span><br><span class="line">import javafx.scene.control.*;</span><br><span class="line">import javafx.scene.input.MouseEvent;</span><br><span class="line">import javafx.scene.layout.BorderPane;</span><br><span class="line">import javafx.scene.layout.HBox;</span><br><span class="line">import javafx.scene.layout.StackPane;</span><br><span class="line">import javafx.scene.layout.VBox;</span><br><span class="line">import javafx.stage.Stage;</span><br><span class="line"></span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.List;</span><br><span class="line">import java.util.UUID;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @ClassName: VBox动态添加组件</span><br><span class="line"> * @Description:</span><br><span class="line"> * @Author: Demon</span><br><span class="line"> * @Date: 2021/3/2 16:16</span><br><span class="line"> */</span><br><span class="line">public class 动态添加组件 extends Application {</span><br><span class="line"></span><br><span class="line">    private static VBox content = new VBox();</span><br><span class="line">    private static String[] attrType = new String[]{"常量", "变量"};</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) {</span><br><span class="line">        launch(args);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void start(Stage primaryStage) {</span><br><span class="line">        // Center - 动态内容</span><br><span class="line">        content.setAlignment(Pos.TOP_CENTER);</span><br><span class="line">        content.setSpacing(3);</span><br><span class="line">        // 加载初始数据</span><br><span class="line">        getContentHbox(new AttributeVo().setAttrId("123456").setAttrName("测试1").setAttrType(0).setAttrValue("123"));</span><br><span class="line">        getContentHbox(new AttributeVo().setAttrId("345678").setAttrName("测试2").setAttrType(1).setAttrValue("321"));</span><br><span class="line"></span><br><span class="line">        // 初始化</span><br><span class="line">        BorderPane borderPane = new BorderPane();</span><br><span class="line">        borderPane.setPadding(new Insets(15,8,15,8));</span><br><span class="line">        // Top</span><br><span class="line">        VBox topVbox = new VBox();</span><br><span class="line">        Label title = new Label("栏位列表");</span><br><span class="line">        topVbox.getChildren().add(title);</span><br><span class="line">        borderPane.setTop(topVbox);</span><br><span class="line">        // Center</span><br><span class="line">        borderPane.setCenter(getCenterPane());</span><br><span class="line">        // Bottom</span><br><span class="line">        HBox bottomHbox = new HBox();</span><br><span class="line">        bottomHbox.setAlignment(Pos.CENTER);</span><br><span class="line">        Button saveBtn = new Button("保存");</span><br><span class="line">        saveBtn.setOnMouseClicked(saveBtnMouseClicked());</span><br><span class="line">        bottomHbox.getChildren().add(saveBtn);</span><br><span class="line">        borderPane.setBottom(bottomHbox);</span><br><span class="line">        // 将内容添加到主面板</span><br><span class="line">        StackPane root = new StackPane();</span><br><span class="line">        root.getChildren().add(borderPane);</span><br><span class="line">        primaryStage.setScene(new Scene(root, 800, 600));</span><br><span class="line">        primaryStage.setResizable(false);</span><br><span class="line">        primaryStage.show();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    private BorderPane getCenterPane(){</span><br><span class="line">        BorderPane borderPane = new BorderPane();</span><br><span class="line">        // Top - 按钮</span><br><span class="line">        HBox topBox = new HBox();</span><br><span class="line">        topBox.setAlignment(Pos.CENTER_RIGHT);</span><br><span class="line">        topBox.setPadding(new Insets(0,5,5,0));</span><br><span class="line">        topBox.setSpacing(10);</span><br><span class="line">        Button addBtn = new Button("添加栏位");</span><br><span class="line">        addBtn.setOnMouseClicked(addBtnMouseClicked());</span><br><span class="line">        Button upBtn = new Button("上移");</span><br><span class="line">        upBtn.setOnMouseClicked(upBtnMouseClicked());</span><br><span class="line">        Button downBtn = new Button("下移");</span><br><span class="line">        downBtn.setOnMouseClicked(downBtnMouseClicked());</span><br><span class="line">        topBox.getChildren().addAll(addBtn,upBtn,downBtn);</span><br><span class="line">        borderPane.setTop(topBox);</span><br><span class="line">        // Center - 表格内容</span><br><span class="line">        borderPane.setCenter(getContent());</span><br><span class="line">        return borderPane;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    private BorderPane getContent(){</span><br><span class="line">        System.out.println("添加初始化内容");</span><br><span class="line">        BorderPane borderPane = new BorderPane();</span><br><span class="line">        // Top - 栏位列表</span><br><span class="line">        HBox hBox = new HBox();</span><br><span class="line">        hBox.setAlignment(Pos.CENTER_LEFT);</span><br><span class="line">        hBox.setPrefHeight(30.0);</span><br><span class="line">        hBox.setSpacing(5);</span><br><span class="line">        Label label1 = new Label("栏位名称");</span><br><span class="line">        label1.setPrefWidth(220);</span><br><span class="line">        label1.setAlignment(Pos.CENTER);</span><br><span class="line">        Label label2 = new Label("栏位类型");</span><br><span class="line">        label2.setPrefWidth(100);</span><br><span class="line">        label2.setAlignment(Pos.CENTER);</span><br><span class="line">        Label label3 = new Label("栏位数值");</span><br><span class="line">        label3.setPrefWidth(350);</span><br><span class="line">        label3.setAlignment(Pos.CENTER);</span><br><span class="line">        hBox.getChildren().addAll(label1,label2,label3);</span><br><span class="line">        borderPane.setTop(hBox);</span><br><span class="line">        // 将内容添加到滚动面板</span><br><span class="line">        ScrollPane scrollPane = new ScrollPane(content);</span><br><span class="line">        scrollPane.setPannable(true);</span><br><span class="line">        scrollPane.setStyle("-fx-background-color: #FFF;");</span><br><span class="line">        BorderPane.setAlignment(scrollPane,Pos.CENTER);</span><br><span class="line"></span><br><span class="line">        borderPane.setCenter(scrollPane);</span><br><span class="line">        return borderPane;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 按钮事件 - 添加栏位</span><br><span class="line">     */</span><br><span class="line">    private EventHandler<span class="tag">&lt;<span class="name">MouseEvent</span>&gt;</span> addBtnMouseClicked(){</span><br><span class="line">        return event -&gt; {</span><br><span class="line">            //添加栏位</span><br><span class="line">            getContentHbox(new AttributeVo().setAttrId(UUID.randomUUID().toString()).setAttrType(0));</span><br><span class="line">        };</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 动态区域操作</span><br><span class="line">     * @param attributeVo 参数</span><br><span class="line">     */</span><br><span class="line">    private void getContentHbox(AttributeVo attributeVo){</span><br><span class="line">        System.out.println("添加ID:"+attributeVo.getAttrId());</span><br><span class="line">        HBox hBox = new HBox(5);</span><br><span class="line">        hBox.setId(UUID.randomUUID().toString());</span><br><span class="line">        hBox.setAlignment(Pos.CENTER_LEFT);</span><br><span class="line">        //栏位选取</span><br><span class="line">        CheckBox attrFieldCheckbox = new CheckBox();</span><br><span class="line">        attrFieldCheckbox.setId("attrFieldCheckbox");</span><br><span class="line">        attrFieldCheckbox.setUserData(attributeVo.getAttrId());</span><br><span class="line">        attrFieldCheckbox.setMaxWidth(30);</span><br><span class="line">        attrFieldCheckbox.setOnAction(event -&gt; {</span><br><span class="line">            if (attrFieldCheckbox.isSelected()) {</span><br><span class="line">                ObservableList<span class="tag">&lt;<span class="name">Node</span>&gt;</span> contentChildren = content.getChildren();</span><br><span class="line">                if (contentChildren != null &amp;&amp; contentChildren.size() &gt; 0) {</span><br><span class="line">                    for (Node node : contentChildren) {</span><br><span class="line">                        CheckBox checkBox = (CheckBox) node.lookup("#attrFieldCheckbox");</span><br><span class="line">                        checkBox.setSelected(false);</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">                attrFieldCheckbox.setSelected(true);</span><br><span class="line">            }</span><br><span class="line">        });</span><br><span class="line">        //栏位名称</span><br><span class="line">        TextField attrName = new TextField(attributeVo.getAttrName());</span><br><span class="line">        attrName.setId("attrName");</span><br><span class="line">        attrName.setPrefWidth(200);</span><br><span class="line">        //栏位类型</span><br><span class="line">        ComboBox attrTypeComboBox = new ComboBox();</span><br><span class="line">        attrTypeComboBox.setId("attrTypeComboBox");</span><br><span class="line">        attrTypeComboBox.setPrefWidth(100);</span><br><span class="line">        attrTypeComboBox.setItems(FXCollections.observableArrayList(attrType));</span><br><span class="line">        attrTypeComboBox.getSelectionModel().select(attributeVo.getAttrType());</span><br><span class="line">        //栏位数组</span><br><span class="line">        TextField attrValue = new TextField(attributeVo.getAttrValue());</span><br><span class="line">        attrValue.setId("attrValue");</span><br><span class="line">        attrValue.setPrefWidth(350);</span><br><span class="line">        //操作按钮</span><br><span class="line">        Button delBtn = new Button("删除");</span><br><span class="line">        delBtn.setMaxWidth(50);</span><br><span class="line">        delBtn.setOnMouseClicked(event1 -&gt; content.getChildren().removeAll(hBox));</span><br><span class="line">        // 添加组件到hBox</span><br><span class="line">        hBox.getChildren().addAll(attrFieldCheckbox,attrName,attrTypeComboBox,attrValue,delBtn);</span><br><span class="line">        // 将hBox添加到内容面板</span><br><span class="line">        content.getChildren().add(content.getChildren().size(), hBox);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 按钮事件 - 上移栏位</span><br><span class="line">     */</span><br><span class="line">    private EventHandler<span class="tag">&lt;<span class="name">MouseEvent</span>&gt;</span> upBtnMouseClicked(){</span><br><span class="line">        return event -&gt; {</span><br><span class="line">            ObservableList<span class="tag">&lt;<span class="name">Node</span>&gt;</span> contentChildren = content.getChildren();</span><br><span class="line">            if (contentChildren != null &amp;&amp; contentChildren.size() &gt; 0) {</span><br><span class="line">                for (Node node : contentChildren) {</span><br><span class="line">                    CheckBox checkBox = (CheckBox) node.lookup("#attrFieldCheckbox");</span><br><span class="line">                    if (checkBox.isSelected()) {</span><br><span class="line">                        HBox hBox = (HBox) content.lookup("#" + checkBox.getParent().getId());</span><br><span class="line">                        int index = content.getChildren().indexOf(hBox);</span><br><span class="line">                        if (index &gt; 0) {</span><br><span class="line">                            content.getChildren().remove(index);</span><br><span class="line">                            content.getChildren().add(index - 1, hBox);</span><br><span class="line">                        }</span><br><span class="line">                        break;</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        };</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 按钮事件 - 下移栏位</span><br><span class="line">     */</span><br><span class="line">    private EventHandler<span class="tag">&lt;<span class="name">MouseEvent</span>&gt;</span> downBtnMouseClicked(){</span><br><span class="line">        return event -&gt; {</span><br><span class="line">            ObservableList<span class="tag">&lt;<span class="name">Node</span>&gt;</span> contentChildren = content.getChildren();</span><br><span class="line">            if (contentChildren != null &amp;&amp; contentChildren.size() &gt; 0) {</span><br><span class="line">                for (Node node : contentChildren) {</span><br><span class="line">                    CheckBox checkBox = (CheckBox) node.lookup("#attrFieldCheckbox");</span><br><span class="line">                    if (checkBox.isSelected()) {</span><br><span class="line">                        HBox hBox = (HBox) content.lookup("#" + checkBox.getParent().getId());</span><br><span class="line">                        int index = content.getChildren().indexOf(hBox);</span><br><span class="line">                        if (index <span class="tag">&lt; <span class="attr">content.getChildren</span>()<span class="attr">.size</span>() <span class="attr">-</span> <span class="attr">1</span>) {</span></span><br><span class="line"><span class="tag">                            <span class="attr">content.getChildren</span>()<span class="attr">.remove</span>(<span class="attr">index</span>);</span></span><br><span class="line"><span class="tag">                            <span class="attr">content.getChildren</span>()<span class="attr">.add</span>(<span class="attr">index</span> + <span class="attr">1</span>, <span class="attr">hBox</span>);</span></span><br><span class="line"><span class="tag">                        }</span></span><br><span class="line"><span class="tag">                        <span class="attr">break</span>;</span></span><br><span class="line"><span class="tag">                    }</span></span><br><span class="line"><span class="tag">                }</span></span><br><span class="line"><span class="tag">            }</span></span><br><span class="line"><span class="tag">        };</span></span><br><span class="line"><span class="tag">    }</span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">    /**</span></span><br><span class="line"><span class="tag">     * 按钮事件 <span class="attr">-</span> 保存栏位</span></span><br><span class="line"><span class="tag">     */</span></span><br><span class="line">    private EventHandler&lt;MouseEvent&gt; saveBtnMouseClicked(){</span><br><span class="line">        return event -&gt; {</span><br><span class="line">            List<span class="tag">&lt;<span class="name">AttributeVo</span>&gt;</span> attributeVoList = new ArrayList<span class="tag">&lt;&gt;</span>();</span><br><span class="line">            //模板栏位</span><br><span class="line">            ObservableList<span class="tag">&lt;<span class="name">Node</span>&gt;</span> contentChildren = content.getChildren();</span><br><span class="line">            if (contentChildren != null &amp;&amp; contentChildren.size() &gt; 0) {</span><br><span class="line">                for (Node node : contentChildren) {</span><br><span class="line">                    // 获取值</span><br><span class="line">                    CheckBox attrFieldCheckbox = (CheckBox) node.lookup("#attrFieldCheckbox");</span><br><span class="line">                    TextField attrName = (TextField) node.lookup("#attrName");</span><br><span class="line">                    ComboBox attrTypeComboBox = (ComboBox) node.lookup("#attrTypeComboBox");</span><br><span class="line">                    TextField attrValue = (TextField) node.lookup("#attrValue");</span><br><span class="line">                    // 赋值</span><br><span class="line">                    AttributeVo attributeVo = new AttributeVo();</span><br><span class="line">                    attributeVo.setAttrId(String.valueOf(attrFieldCheckbox.getUserData()));</span><br><span class="line">                    attributeVo.setAttrName(attrName.getText());</span><br><span class="line">                    attributeVo.setAttrType(attrTypeComboBox.getSelectionModel().getSelectedIndex());</span><br><span class="line">                    attributeVo.setAttrValue(attrValue.getText());</span><br><span class="line">                    attributeVoList.add(attributeVo);</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            System.out.println(attributeVoList);</span><br><span class="line">        };</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 虚拟实体类</span><br><span class="line"> */</span><br><span class="line">class AttributeVo {</span><br><span class="line">    private String attrId;</span><br><span class="line">    private String attrName;</span><br><span class="line">    private int attrType;</span><br><span class="line">    private String attrValue;</span><br><span class="line"></span><br><span class="line">    public String getAttrId() {</span><br><span class="line">        return attrId;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    public AttributeVo setAttrId(String attrId) {</span><br><span class="line">        this.attrId = attrId;</span><br><span class="line">        return this;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    public String getAttrName() {</span><br><span class="line">        return attrName;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    public AttributeVo setAttrName(String attrName) {</span><br><span class="line">        this.attrName = attrName;</span><br><span class="line">        return this;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    public int getAttrType() {</span><br><span class="line">        return attrType;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    public AttributeVo setAttrType(int attrType) {</span><br><span class="line">        this.attrType = attrType;</span><br><span class="line">        return this;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    public String getAttrValue() {</span><br><span class="line">        return attrValue;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    public AttributeVo setAttrValue(String attrValue) {</span><br><span class="line">        this.attrValue = attrValue;</span><br><span class="line">        return this;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public String toString() {</span><br><span class="line">        return "AttributeVo{" +</span><br><span class="line">                "attrId='" + attrId + '\'' +</span><br><span class="line">                ", attrName='" + attrName + '\'' +</span><br><span class="line">                ", attrType=" + attrType +</span><br><span class="line">                ", attrValue='" + attrValue + '\'' +</span><br><span class="line">                '}';</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      JavaFx之动态添加组件
    
    </summary>
    
    
      <category term="JavaFx" scheme="https://www.zhuqiaolun.com/categories/JavaFx/"/>
    
    
      <category term="VBox" scheme="https://www.zhuqiaolun.com/tags/VBox/"/>
    
  </entry>
  
  <entry>
    <title>JavaFx之TreeView的事件</title>
    <link href="https://www.zhuqiaolun.com/2021/03/1614672011404/1614672011404/"/>
    <id>https://www.zhuqiaolun.com/2021/03/1614672011404/1614672011404/</id>
    <published>2021-03-02T08:00:11.000Z</published>
    <updated>2021-03-15T09:20:46.106Z</updated>
    
    <content type="html"><![CDATA[<p>判断TreeView是否点击到节点上</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Node node = event.getPickResult().getIntersectedNode();</span><br><span class="line">boolean flag = node instanceof TreeCell &amp;&amp; ((TreeCell) node).getText() != null;</span><br><span class="line">if (node instanceof Text || flag) {</span><br><span class="line">    String name = (String) ((TreeItem)tree.getSelectionModel().getSelectedItem()).getValue();</span><br><span class="line">    System.out.println("Node click: " + name);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p>给TreeView 添加 鼠标点击事件<br>MouseButton.NONE 无判断<br>左键：event.getButton().compareTo(MouseButton.PRIMARY)  == 1<br>滚轮：event.getButton().compareTo(MouseButton.MIDDLE)  == 1<br>右键：event.getButton().compareTo(MouseButton.SECONDARY)  == 1</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">tree.addEventFilter(MouseEvent.MOUSE_CLICKED, event -&gt; {</span><br><span class="line">   switch (event.getButton().compareTo(MouseButton.NONE)){</span><br><span class="line">       case 1:</span><br><span class="line">           System.out.println("【左键】Node click: " + name);</span><br><span class="line">           break;</span><br><span class="line">       case 2:</span><br><span class="line">           System.out.println("【滚轮】Node click: " + name);</span><br><span class="line">           break;</span><br><span class="line">       case 3:</span><br><span class="line">           System.out.println("【右键】Node click: " + name);</span><br><span class="line">           break;</span><br><span class="line">       default:</span><br><span class="line">           break;</span><br><span class="line">   }</span><br><span class="line">});</span><br></pre></td></tr></tbody></table></figure></div><p>完成代码如下：</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">package sample;</span><br><span class="line"></span><br><span class="line">import javafx.application.Application;</span><br><span class="line">import javafx.scene.Node;</span><br><span class="line">import javafx.scene.Scene;</span><br><span class="line">import javafx.scene.control.TreeCell;</span><br><span class="line">import javafx.scene.control.TreeItem;</span><br><span class="line">import javafx.scene.control.TreeView;</span><br><span class="line">import javafx.scene.input.MouseButton;</span><br><span class="line">import javafx.scene.input.MouseEvent;</span><br><span class="line">import javafx.scene.layout.StackPane;</span><br><span class="line">import javafx.scene.text.Text;</span><br><span class="line">import javafx.stage.Stage;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @ClassName: TreeViewMouseEvent</span><br><span class="line"> * @Description:</span><br><span class="line"> * @Author: Demon</span><br><span class="line"> * @Date: 2021/3/1 11:16</span><br><span class="line"> */</span><br><span class="line">public class TreeViewMouseEvent extends Application {</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) {</span><br><span class="line">        launch(args);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void start(Stage primaryStage) {</span><br><span class="line">        TreeItem<span class="tag">&lt;<span class="name">String</span>&gt;</span> rootItem = new TreeItem<span class="tag">&lt;&gt;</span>("Root");</span><br><span class="line">        rootItem.setExpanded(true);</span><br><span class="line"></span><br><span class="line">        TreeItem<span class="tag">&lt;<span class="name">String</span>&gt;</span> itemA = new TreeItem<span class="tag">&lt;&gt;</span>("A");</span><br><span class="line">        TreeItem<span class="tag">&lt;<span class="name">String</span>&gt;</span> itemB = new TreeItem<span class="tag">&lt;&gt;</span>("B");</span><br><span class="line">        rootItem.getChildren().add(itemA);</span><br><span class="line">        rootItem.getChildren().add(itemB);</span><br><span class="line"></span><br><span class="line">        TreeView<span class="tag">&lt;<span class="name">String</span>&gt;</span> tree = new TreeView<span class="tag">&lt;&gt;</span>(rootItem);</span><br><span class="line">        // 给TreeView 添加 鼠标点击事件</span><br><span class="line">        tree.addEventFilter(MouseEvent.MOUSE_CLICKED, event -&gt; {</span><br><span class="line">            Node node = event.getPickResult().getIntersectedNode();</span><br><span class="line">            boolean flag = node instanceof TreeCell &amp;&amp; ((TreeCell) node).getText() != null;</span><br><span class="line">            if (node instanceof Text || flag) {</span><br><span class="line">                String name = (String) ((TreeItem)tree.getSelectionModel().getSelectedItem()).getValue();</span><br><span class="line">                switch (event.getButton().compareTo(MouseButton.NONE)){</span><br><span class="line">                    case 1:</span><br><span class="line">                        System.out.println("【左键】Node click: " + name);</span><br><span class="line">                        break;</span><br><span class="line">                    case 2:</span><br><span class="line">                        System.out.println("【滚轮】Node click: " + name);</span><br><span class="line">                        break;</span><br><span class="line">                    case 3:</span><br><span class="line">                        System.out.println("【右键】Node click: " + name);</span><br><span class="line">                        break;</span><br><span class="line">                    default:</span><br><span class="line">                        break;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        });</span><br><span class="line">        StackPane root = new StackPane();</span><br><span class="line">        root.getChildren().add(tree);</span><br><span class="line">        primaryStage.setScene(new Scene(root, 600, 400));</span><br><span class="line">        primaryStage.show();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      JavaFx之TreeView鼠标事件
    
    </summary>
    
    
      <category term="JavaFx" scheme="https://www.zhuqiaolun.com/categories/JavaFx/"/>
    
    
      <category term="TreeView" scheme="https://www.zhuqiaolun.com/tags/TreeView/"/>
    
  </entry>
  
  <entry>
    <title>一款现代化的博客 - Halo</title>
    <link href="https://www.zhuqiaolun.com/2021/02/1614323515573/1614323515573/"/>
    <id>https://www.zhuqiaolun.com/2021/02/1614323515573/1614323515573/</id>
    <published>2021-02-26T07:11:55.000Z</published>
    <updated>2021-03-10T02:41:31.509Z</updated>
    
    <content type="html"><![CDATA[<h3 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h3><p>Halo：<a href="https://halo.run/" target="_blank" rel="noopener">https://halo.run/</a><br>下载资源：<a href="https://dl.halo.run/" target="_blank" rel="noopener">https://dl.halo.run/</a><br>说明：从 1.4.3 起，版本要求为 11 以上的版本。1.4.3 以下需要 1.8 以上的版本。<br>所以下载 1.4.2 版本即可：Windows 点击下载 , Linux wget下载</p><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><p>Windows：</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar halo-1.4.2.jar</span><br></pre></td></tr></tbody></table></figure></div><p>Linux：</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">java -jar halo-1.4.2.jar</span><br><span class="line">或</span><br><span class="line">nohup java -jar halo-1.4.2.jar &amp;</span><br><span class="line">或</span><br><span class="line">nohup java -jar halo-1.4.2.jar --server.port=8083 &amp;</span><br><span class="line"></span><br><span class="line">关闭：</span><br><span class="line">lsof -i:8090 或 lsof -i:8083</span><br><span class="line">kill -9 PID</span><br></pre></td></tr></tbody></table></figure></div><h3 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h3><p>访问路径：/<br>默认端口：8090</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Halo：</span><br><span class="line">    http://127.0.0.1:8090</span><br><span class="line">Halo admin：</span><br><span class="line">    http://127.0.0.1:8090/admin</span><br></pre></td></tr></tbody></table></figure></div><h3 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h3><p>第一次访问会进行初始化信息信息存在<br>在系统当前用户目录下产生一个 .halo 的文件夹，绝对路径为 ~/.halo、/root/.halo/<br><img src="/2021/02/1614323515573/1614323515573/20210226155924.png" alt="20210226155924"><br>填写内容，一路下一步即可，直至到登录页面。<br><img src="/2021/02/1614323515573/1614323515573/20210226165723.png" alt="20210226165723"></p><p><a href="http://www.zhuqiaolun.com:8090">我的Halo博客</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      一款现代化的博客/CMS系统，值得一试
    
    </summary>
    
    
      <category term="Blog" scheme="https://www.zhuqiaolun.com/categories/Blog/"/>
    
    
      <category term="halo" scheme="https://www.zhuqiaolun.com/tags/halo/"/>
    
  </entry>
  
  <entry>
    <title>Java原生URL模拟请求</title>
    <link href="https://www.zhuqiaolun.com/2021/02/1612419197069/1612419197069/"/>
    <id>https://www.zhuqiaolun.com/2021/02/1612419197069/1612419197069/</id>
    <published>2021-02-04T06:13:17.000Z</published>
    <updated>2021-03-01T06:40:37.600Z</updated>
    
    <content type="html"><![CDATA[<p>采用原始URL进行模拟请求</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import java.io.*;</span><br><span class="line">import java.net.HttpURLConnection;</span><br><span class="line">import java.net.URL;</span><br><span class="line">import java.nio.charset.StandardCharsets;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @ClassName: HttpClientUtil</span><br><span class="line"> * @Description: Java原生URL模拟请求</span><br><span class="line"> * @Author: Demon</span><br><span class="line"> * @Date: 2021/2/4 10:45</span><br><span class="line"> */</span><br><span class="line">public class HttpClientUtil {</span><br><span class="line"></span><br><span class="line">    public static String doGet(String httpUrl) {</span><br><span class="line">        HttpURLConnection connection;</span><br><span class="line">        try {</span><br><span class="line">            // 创建远程url连接对象</span><br><span class="line">            URL url = new URL(httpUrl);</span><br><span class="line">            // 通过远程url连接对象打开一个连接，强转成httpURLConnection类</span><br><span class="line">            connection = (HttpURLConnection) url.openConnection();</span><br><span class="line">            // 设置连接方式：get</span><br><span class="line">            connection.setRequestMethod("GET");</span><br><span class="line">            // 设置连接主机服务器的超时时间：15000毫秒</span><br><span class="line">            connection.setConnectTimeout(15000);</span><br><span class="line">            // 设置读取远程返回的数据时间：60000毫秒</span><br><span class="line">            connection.setReadTimeout(60000);</span><br><span class="line">            // 发送请求</span><br><span class="line">            connection.connect();</span><br><span class="line">            return getResult(null,connection);</span><br><span class="line">        } catch (IOException e) {</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            return null;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    public static String doPost(String httpUrl, String param) {</span><br><span class="line">        HttpURLConnection connection;</span><br><span class="line">        OutputStream os;</span><br><span class="line">        try {</span><br><span class="line">            URL url = new URL(httpUrl);</span><br><span class="line">            // 通过远程url连接对象打开连接</span><br><span class="line">            connection = (HttpURLConnection) url.openConnection();</span><br><span class="line">            // 设置连接请求方式</span><br><span class="line">            connection.setRequestMethod("POST");</span><br><span class="line">            // 设置连接主机服务器超时时间：15000毫秒</span><br><span class="line">            connection.setConnectTimeout(15000);</span><br><span class="line">            // 设置读取主机服务器返回数据超时时间：60000毫秒</span><br><span class="line">            connection.setReadTimeout(60000);</span><br><span class="line">            // 默认值为：false，当向远程服务器传送数据/写数据时，需要设置为true</span><br><span class="line">            connection.setDoOutput(true);</span><br><span class="line">            // 默认值为：true，当前向远程服务读取数据时，设置为true，该参数可有可无</span><br><span class="line">            connection.setDoInput(true);</span><br><span class="line">            // 设置传入参数的格式:请求参数应该是 name1=value1&amp;name2=value2 的形式。</span><br><span class="line">            connection.setRequestProperty("Content-Type", "application/x-www-form-urlencoded");</span><br><span class="line">            // 通过连接对象获取一个输出流</span><br><span class="line">            os = connection.getOutputStream();</span><br><span class="line">            // 通过输出流对象将参数写出去/传输出去,它是通过字节数组写出的</span><br><span class="line">            os.write(param.getBytes());</span><br><span class="line">            return getResult(os,connection);</span><br><span class="line">        } catch (IOException e) {</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            return null;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    private static String getResult(OutputStream os,HttpURLConnection connection){</span><br><span class="line">        int responseCode = 200;</span><br><span class="line">        InputStream is = null;</span><br><span class="line">        BufferedReader br = null;</span><br><span class="line">        try {</span><br><span class="line">            String result = null;</span><br><span class="line">            if (connection.getResponseCode() == responseCode) {</span><br><span class="line">                is = connection.getInputStream();</span><br><span class="line">                br = new BufferedReader(new InputStreamReader(is, StandardCharsets.UTF_8));</span><br><span class="line">                StringBuilder stringBuilder = new StringBuilder();</span><br><span class="line">                String temp;</span><br><span class="line">                while ((temp = br.readLine()) != null) {</span><br><span class="line">                    stringBuilder.append(temp);</span><br><span class="line">                }</span><br><span class="line">                result = stringBuilder.toString();</span><br><span class="line">            }</span><br><span class="line">            return result;</span><br><span class="line">        } catch (Exception e){</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            return null;</span><br><span class="line">        } finally {</span><br><span class="line">            getClose(br,os,is,connection);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    private static void getClose(BufferedReader br,OutputStream os, InputStream is,HttpURLConnection connection ){</span><br><span class="line">        // 关闭资源</span><br><span class="line">        if (null != br) {</span><br><span class="line">            try {</span><br><span class="line">                br.close();</span><br><span class="line">            } catch (IOException e) {</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        if (null != os) {</span><br><span class="line">            try {</span><br><span class="line">                os.close();</span><br><span class="line">            } catch (IOException e) {</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        if (null != is) {</span><br><span class="line">            try {</span><br><span class="line">                is.close();</span><br><span class="line">            } catch (IOException e) {</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        if(connection != null){</span><br><span class="line">            connection.disconnect();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String doGet = HttpClientUtil.doGet("https://www.baidu.com/");</span><br><span class="line">System.out.println(doGet);</span><br></pre></td></tr></tbody></table></figure></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      Java原生URL模拟请求
    
    </summary>
    
    
      <category term="J-Tools" scheme="https://www.zhuqiaolun.com/categories/J-Tools/"/>
    
    
      <category term="Java" scheme="https://www.zhuqiaolun.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java查询上海公交实时到站</title>
    <link href="https://www.zhuqiaolun.com/2021/02/1612343895210/1612343895210/"/>
    <id>https://www.zhuqiaolun.com/2021/02/1612343895210/1612343895210/</id>
    <published>2021-02-03T09:18:15.000Z</published>
    <updated>2021-03-01T06:46:25.400Z</updated>
    
    <content type="html"><![CDATA[<p>数据由查询《上海发布》获取：<br>上海发布地址：<a href="https://shanghaicity.openservice.kankanews.com/" target="_blank" rel="noopener">https://shanghaicity.openservice.kankanews.com/</a><br>上海发布-实时公交：<a href="https://shanghaicity.openservice.kankanews.com/public/bus" target="_blank" rel="noopener">https://shanghaicity.openservice.kankanews.com/public/bus</a></p><h3 id="获取公交页面"><a href="#获取公交页面" class="headerlink" title="获取公交页面"></a>获取公交页面</h3><p>返回的是一个HTML页面</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String doGet = HttpClientUtil.doGet("https://shanghaicity.openservice.kankanews.com/public/bus/mes/sid/edf7aec0b3543b5abd876f5c545cb1e8");</span><br><span class="line">System.out.println(doGet);</span><br></pre></td></tr></tbody></table></figure></div><h3 id="获取公交路线sid"><a href="#获取公交路线sid" class="headerlink" title="获取公交路线sid"></a>获取公交路线sid</h3><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">参数字段描述：</span><br><span class="line">idnum：公交路线；如：浦东2路，636路 等，</span><br><span class="line"></span><br><span class="line">结果字段描述：</span><br><span class="line">sid：公交节站ID</span><br></pre></td></tr></tbody></table></figure></div><p>//查询 浦东2路 的sid</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">String param = "";</span><br><span class="line">String httpUrl = "https://shanghaicity.openservice.kankanews.com/public/bus/get?idnum=浦东2路";</span><br><span class="line">String result = HttpClientUtil.doPost(httpUrl, param);</span><br><span class="line">System.out.println(result);</span><br><span class="line">//返回结果（公交路线是否存在都会返回）</span><br><span class="line">{"mes": "","sid": "edf7aec0b3543b5abd876f5c545cb1e8"}</span><br></pre></td></tr></tbody></table></figure></div><p>RestClient模拟请求：<br><img src="/2021/02/1612343895210/1612343895210/20210204135903.png" alt="20210204135903"></p><h3 id="获取公交实时信息"><a href="#获取公交实时信息" class="headerlink" title="获取公交实时信息"></a>获取公交实时信息</h3><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">参数字段描述：</span><br><span class="line">stoptype：公交节站方向(0-正向；1-反向)</span><br><span class="line">stopid：公交节站节点</span><br><span class="line">sid：公交节站ID</span><br><span class="line"></span><br><span class="line">结果字段描述：</span><br><span class="line">terminal：车牌</span><br><span class="line">stopdis：距离当前站还有多少站</span><br><span class="line">time：距离当前站还有多少时间(秒)</span><br></pre></td></tr></tbody></table></figure></div><p>//查询 浦东2路(胜利路川沙路 -&gt; 南曹路唐陆公路) 的车辆到达唐镇地址站</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">String httpUrl = "https://shanghaicity.openservice.kankanews.com/public/bus/Getstop";</span><br><span class="line">String param = "stoptype=0&amp;stopid=23&amp;sid=edf7aec0b3543b5abd876f5c545cb1e8";</span><br><span class="line">String result = HttpClientUtil.doPost(httpUrl, param);</span><br><span class="line">System.out.println(result);</span><br><span class="line">//返回结果(当有车辆时)</span><br><span class="line">[{"@attributes":{"cod":"浦东2路"},"terminal":"沪D-61543无障碍","stopdis":"2","distance":"1007","time":"158"}]</span><br><span class="line">//返回结果(当无车辆时)</span><br><span class="line">{"error":"-2"}</span><br><span class="line">//返回结果(当sid不存在时)</span><br><span class="line">{"error":"0"}</span><br></pre></td></tr></tbody></table></figure></div><p>RestClient模拟请求：<br><img src="/2021/02/1612343895210/1612343895210/20210204135818.png" alt="20210204135818"></p><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p>工具类：<a href="/2021/02/1612419197069/1612419197069/">HttpClientUtil</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      上海发布 之 公交实时到站
    
    </summary>
    
    
      <category term="J-Tools" scheme="https://www.zhuqiaolun.com/categories/J-Tools/"/>
    
    
      <category term="Java" scheme="https://www.zhuqiaolun.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java发送邮件</title>
    <link href="https://www.zhuqiaolun.com/2021/01/1611916009068/1611916009068/"/>
    <id>https://www.zhuqiaolun.com/2021/01/1611916009068/1611916009068/</id>
    <published>2021-01-29T10:26:49.000Z</published>
    <updated>2021-03-15T07:27:31.278Z</updated>
    
    <content type="html"><![CDATA[<p>本文以 Java 发送邮件功能，采用commons-email模式执行</p><h3 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h3><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 发送邮件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-email<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import org.apache.commons.mail.EmailException;</span><br><span class="line">import org.apache.commons.mail.HtmlEmail;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @className: MailUtil.java</span><br><span class="line"> * @description: 邮件工具类</span><br><span class="line"> * @author: Demon</span><br><span class="line"> * @date 2020/10/27 17:09</span><br><span class="line"> */</span><br><span class="line">public class MailUtil {</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 构建器</span><br><span class="line">     */</span><br><span class="line">    public static class EmailInfo {</span><br><span class="line"></span><br><span class="line">        /**</span><br><span class="line">         * SMTP 服务器 端口</span><br><span class="line">         */</span><br><span class="line">        private String mailServer;</span><br><span class="line">        private Integer mailPort;</span><br><span class="line"></span><br><span class="line">        /**</span><br><span class="line">         * 发件人 账号</span><br><span class="line">         */</span><br><span class="line">        private String mailNick;</span><br><span class="line"></span><br><span class="line">        /**</span><br><span class="line">         * 发件人 账号</span><br><span class="line">         */</span><br><span class="line">        private String mailUsername;</span><br><span class="line"></span><br><span class="line">        /**</span><br><span class="line">         * 发件人 密码</span><br><span class="line">         */</span><br><span class="line">        private String mailPassword;</span><br><span class="line"></span><br><span class="line">        /**</span><br><span class="line">         * 邮件标题</span><br><span class="line">         */</span><br><span class="line">        private String title;</span><br><span class="line">        </span><br><span class="line">        /**</span><br><span class="line">         * 邮件内容</span><br><span class="line">         */</span><br><span class="line">        private String content;</span><br><span class="line">        </span><br><span class="line">        /**</span><br><span class="line">         * 收件人</span><br><span class="line">         */</span><br><span class="line">        private List<span class="tag">&lt;<span class="name">String</span>&gt;</span> receivers;</span><br><span class="line"></span><br><span class="line">        boolean ssl;</span><br><span class="line"></span><br><span class="line">        public EmailInfo(String mailServer,Integer mailPort,String mailNick,String mailUsername,</span><br><span class="line">            String mailPassword,String title,String content,List<span class="tag">&lt;<span class="name">String</span>&gt;</span> receivers,boolean ssl) {</span><br><span class="line">            this.mailServer = mailServer;</span><br><span class="line">            this.mailPort = mailPort;</span><br><span class="line">            this.mailNick = mailNick;</span><br><span class="line">            this.mailUsername = mailUsername;</span><br><span class="line">            this.mailPassword = mailPassword;</span><br><span class="line">            this.title = title;</span><br><span class="line">            this.content = content;</span><br><span class="line">            this.receivers = receivers;</span><br><span class="line">            this.ssl = ssl;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        public MailUtil send() throws Exception {</span><br><span class="line">            return new MailUtil(this);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    private MailUtil(EmailInfo emailInfo) throws Exception {</span><br><span class="line">        HtmlEmail email = new HtmlEmail();</span><br><span class="line">        // 通过Server 发送邮件</span><br><span class="line">        email.setHostName(emailInfo.mailServer);</span><br><span class="line">        email.setSmtpPort(emailInfo.mailPort);</span><br><span class="line">        //设定smtp服务器的认证资料信息</span><br><span class="line">        email.setAuthentication(emailInfo.mailUsername, emailInfo.mailPassword);</span><br><span class="line">        email.setStartTLSEnabled(false);</span><br><span class="line">        email.setSSLOnConnect(emailInfo.ssl);</span><br><span class="line">        try {</span><br><span class="line">            // 设定发件人</span><br><span class="line">            email.setFrom(emailInfo.mailUsername,emailInfo.mailNick);</span><br><span class="line">            // 设定收件人 （多人）</span><br><span class="line">            int size = emailInfo.receivers.size();</span><br><span class="line">            email.addTo(emailInfo.receivers.toArray(new String[size]));</span><br><span class="line">            // 设定内容的语言集</span><br><span class="line">            email.setCharset("UTF-8");</span><br><span class="line">            email.setDebug(false);</span><br><span class="line">            // 设定主题</span><br><span class="line">            email.setSubject(emailInfo.title);</span><br><span class="line">            // 设定邮件内容</span><br><span class="line">            email.setHtmlMsg(emailInfo.content);</span><br><span class="line">            // 发送邮件</span><br><span class="line">            email.send();</span><br><span class="line">            System.out.println("邮件发送成功！");</span><br><span class="line">        } catch (EmailException e) {</span><br><span class="line">            System.out.println("邮件发送失败！");</span><br><span class="line">            throw new Exception(e);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h3 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h3><h4 id="新浪"><a href="#新浪" class="headerlink" title="新浪"></a>新浪</h4><p><img src="/2021/01/1611916009068/1611916009068/20210129184031.png" alt="20210129184031"><br>String mailServer = smtp.sinanet.com<br>Integer mailPort = 25<br>boolean ssl = false</p><h4 id="网易"><a href="#网易" class="headerlink" title="网易"></a>网易</h4><p><img src="/2021/01/1611916009068/1611916009068/20210129184347.png" alt="20210129184347"><br><img src="/2021/01/1611916009068/1611916009068/20210129184412.png" alt="20210129184412"><br>如若开启了授权密码，请以授权密码当做用户密码使用<br>String mailServer = smtp.163.com<br>Integer mailPort = 25<br>boolean ssl = false</p><h4 id="QQ"><a href="#QQ" class="headerlink" title="QQ"></a>QQ</h4><p><img src="/2021/01/1611916009068/1611916009068/20210129190030.png" alt="20210129190030"><br>如若开启了授权密码，请以授权密码当做用户密码使用<br>String mailServer = smtp.qq.com<br>Integer mailPort = 465<br>boolean ssl = true</p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">@Test</span><br><span class="line">public void 测试邮件() {</span><br><span class="line">    try {</span><br><span class="line">        String content = "<span class="meta">&lt;!doctypehtml&gt;</span><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">en</span>&gt;</span><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">UTF-8</span>&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>测试<span class="tag">&lt;/<span class="name">h1</span>&gt;</span>";</span><br><span class="line">        // 发送邮件信息</span><br><span class="line">        String mailServer = "smtp.sinanet.com";</span><br><span class="line">        Integer mailPort = 25;</span><br><span class="line">        String mailNick = "demon";</span><br><span class="line">        String mailUsername = "demon@xxxxxxxxx";</span><br><span class="line">        String mailPassword = "123456789";</span><br><span class="line">        String title = "本地测试";</span><br><span class="line">        List<span class="tag">&lt;<span class="name">String</span>&gt;</span> receivers = new ArrayList<span class="tag">&lt;&gt;</span>();</span><br><span class="line">        receivers.add("1097305826@qq.com");</span><br><span class="line">        MailUtil.EmailInfo emailInfo = new MailUtil.EmailInfo(mailServer,mailPort,</span><br><span class="line">                mailNick,mailUsername,mailPassword,title, content,receivers,false);</span><br><span class="line">        // 发送邮件</span><br><span class="line">        emailInfo.send();</span><br><span class="line">    } catch (Exception e) {</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      Java 发送邮件 - 新浪，网易，QQ
    
    </summary>
    
    
      <category term="J-Tools" scheme="https://www.zhuqiaolun.com/categories/J-Tools/"/>
    
    
      <category term="Java" scheme="https://www.zhuqiaolun.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>poi(3.17)解析excel - 2007 续.1</title>
    <link href="https://www.zhuqiaolun.com/2020/11/1606102218582/1606102218582/"/>
    <id>https://www.zhuqiaolun.com/2020/11/1606102218582/1606102218582/</id>
    <published>2020-11-23T03:30:18.000Z</published>
    <updated>2021-03-01T06:46:25.508Z</updated>
    
    <content type="html"><![CDATA[<h3 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h3><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.poi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>poi<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.poi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>poi-ooxml<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.poi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>poi-ooxml-schemas<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h3><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import org.apache.poi.ss.usermodel.Cell;</span><br><span class="line">import org.apache.poi.ss.usermodel.Row;</span><br><span class="line">import org.apache.poi.ss.usermodel.Sheet;</span><br><span class="line">import org.apache.poi.ss.usermodel.Workbook;</span><br><span class="line">import org.apache.poi.xssf.usermodel.XSSFWorkbook;</span><br><span class="line"></span><br><span class="line">import java.io.FileInputStream;</span><br><span class="line">import java.io.FileNotFoundException;</span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @className: ExcelUtil.java</span><br><span class="line"> * @description: excel 工具类</span><br><span class="line"> * @author: Demon</span><br><span class="line"> */</span><br><span class="line">public class ExcelUtil {</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 解析数据</span><br><span class="line">     */</span><br><span class="line">private static List&lt;Map&lt;String, String&gt;&gt; getData(FileInputStream input) throws IOException {</span><br><span class="line">            List&lt;Map&lt;String,String&gt;&gt; mapList = new ArrayList&lt;&gt;();</span><br><span class="line">            Workbook wb = null;</span><br><span class="line">            try {</span><br><span class="line">                wb = new XSSFWorkbook(input);</span><br><span class="line">                // 获得第一个Sheet1</span><br><span class="line">                Sheet sheet = wb.getSheetAt(0);</span><br><span class="line">                // 获得第一行表头，计算列数</span><br><span class="line">                int columnNum = sheet.getRow(0).getPhysicalNumberOfCells();</span><br><span class="line">                // 遍历数据</span><br><span class="line">                sheet.rowIterator().forEachRemaining(row -&gt;{</span><br><span class="line">                    Map<span class="tag">&lt;<span class="name">String,String</span>&gt;</span> jsonMap = new LinkedHashMap<span class="tag">&lt;&gt;</span>();</span><br><span class="line">                    for (int i = 0; i <span class="tag">&lt; <span class="attr">columnNum</span>; <span class="attr">i</span>++) {</span></span><br><span class="line"><span class="tag">                        <span class="attr">Cell</span> <span class="attr">cell</span> = <span class="string">row.getCell(i);</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">String</span> <span class="attr">val</span> = <span class="string">""</span>;</span></span><br><span class="line"><span class="tag">                        <span class="attr">if</span> (<span class="attr">cell</span> != <span class="string">null)</span> {</span></span><br><span class="line"><span class="tag">                            // 首先强制设置成<span class="attr">string</span>类型</span></span><br><span class="line"><span class="tag">                            <span class="attr">cell.setCellType</span>(<span class="attr">CellType.STRING</span>);</span></span><br><span class="line"><span class="tag">                            // 再读取值</span></span><br><span class="line"><span class="tag">                            <span class="attr">val</span> = <span class="string">getXCellFormatValue(cell);</span></span></span><br><span class="line"><span class="tag">                        }</span></span><br><span class="line"><span class="tag">                        <span class="attr">jsonMap.put</span>(<span class="attr">String.valueOf</span>(<span class="attr">i</span>), <span class="attr">val</span>);</span></span><br><span class="line"><span class="tag">                    }</span></span><br><span class="line"><span class="tag">                    <span class="attr">mapList.add</span>(<span class="attr">jsonMap</span>);</span></span><br><span class="line"><span class="tag">                });</span></span><br><span class="line"><span class="tag">            } <span class="attr">catch</span> (<span class="attr">FileNotFoundException</span> <span class="attr">e</span>) {</span></span><br><span class="line"><span class="tag">                <span class="attr">log.error</span>("找不到<span class="attr">xlsx</span>文件",<span class="attr">e</span>);</span></span><br><span class="line"><span class="tag">                <span class="attr">throw</span> <span class="attr">new</span> <span class="attr">IOException</span>(<span class="attr">e</span>);</span></span><br><span class="line"><span class="tag">            } <span class="attr">catch</span> (<span class="attr">IOException</span> <span class="attr">e</span>) {</span></span><br><span class="line"><span class="tag">                <span class="attr">log.error</span>("解析<span class="attr">xlsx</span>文件错误",<span class="attr">e</span>);</span></span><br><span class="line"><span class="tag">                <span class="attr">throw</span> <span class="attr">new</span> <span class="attr">IOException</span>(<span class="attr">e</span>);</span></span><br><span class="line"><span class="tag">            } <span class="attr">finally</span> {</span></span><br><span class="line"><span class="tag">                <span class="attr">if</span> (<span class="attr">wb</span> != <span class="string">null)</span> {</span></span><br><span class="line"><span class="tag">                    <span class="attr">try</span> {</span></span><br><span class="line"><span class="tag">                        <span class="attr">wb.close</span>();</span></span><br><span class="line"><span class="tag">                    } <span class="attr">catch</span> (<span class="attr">IOException</span> <span class="attr">e</span>) {</span></span><br><span class="line"><span class="tag">                        <span class="attr">e.printStackTrace</span>();</span></span><br><span class="line"><span class="tag">                    }</span></span><br><span class="line"><span class="tag">                }</span></span><br><span class="line"><span class="tag">                <span class="attr">if</span> (<span class="attr">input</span> != <span class="string">null)</span> {</span></span><br><span class="line"><span class="tag">                    <span class="attr">try</span> {</span></span><br><span class="line"><span class="tag">                        <span class="attr">input.close</span>();</span></span><br><span class="line"><span class="tag">                    } <span class="attr">catch</span> (<span class="attr">IOException</span> <span class="attr">e</span>) {</span></span><br><span class="line"><span class="tag">                        <span class="attr">e.printStackTrace</span>();</span></span><br><span class="line"><span class="tag">                    }</span></span><br><span class="line"><span class="tag">                }</span></span><br><span class="line"><span class="tag">            }</span></span><br><span class="line"><span class="tag">            <span class="attr">return</span> <span class="attr">mapList</span>;</span></span><br><span class="line"><span class="tag">        }</span></span><br><span class="line"><span class="tag">}</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p><a href="/2020/11/1605159781717/1605159781717/">poi(3.17)解析excel - 2007</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      excel工具
    
    </summary>
    
    
      <category term="J-Tools" scheme="https://www.zhuqiaolun.com/categories/J-Tools/"/>
    
    
      <category term="Java" scheme="https://www.zhuqiaolun.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Zip4j - 压缩/解压（可设置密码）</title>
    <link href="https://www.zhuqiaolun.com/2020/11/1605683417659/1605683417659/"/>
    <id>https://www.zhuqiaolun.com/2020/11/1605683417659/1605683417659/</id>
    <published>2020-11-18T07:10:17.000Z</published>
    <updated>2021-03-01T06:46:25.420Z</updated>
    
    <content type="html"><![CDATA[<h3 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h3><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.lingala.zip4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>zip4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import net.lingala.zip4j.ZipFile;</span><br><span class="line">import net.lingala.zip4j.exception.ZipException;</span><br><span class="line">import net.lingala.zip4j.model.FileHeader;</span><br><span class="line">import net.lingala.zip4j.model.ZipParameters;</span><br><span class="line">import net.lingala.zip4j.model.enums.CompressionLevel;</span><br><span class="line">import net.lingala.zip4j.model.enums.CompressionMethod;</span><br><span class="line">import net.lingala.zip4j.model.enums.EncryptionMethod;</span><br><span class="line"></span><br><span class="line">import java.io.File;</span><br><span class="line">import java.nio.charset.Charset;</span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @ClassName: Zip4jUtil</span><br><span class="line"> * @Description: zip 工具</span><br><span class="line"> * @Author: Demon</span><br><span class="line"> */</span><br><span class="line">public class Zip4jUtil {</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 根据给定密码压缩文件(s)到指定目录</span><br><span class="line">     *</span><br><span class="line">     * @param destFileName 压缩文件存放绝对路径 e.g.:D:/upload/zip/demo.zip</span><br><span class="line">     * @param password 密码(可为null)</span><br><span class="line">     * @param files 单个文件或文件数组</span><br><span class="line">     * @return 最终的压缩文件存放的绝对路径,如果为false则说明压缩失败.</span><br><span class="line">     */</span><br><span class="line">    public static boolean compress(String destFileName, String password, File... files) throws ZipException {</span><br><span class="line">        try {</span><br><span class="line">            ZipParameters parameters = new ZipParameters();</span><br><span class="line">            // 压缩方式 8</span><br><span class="line">            parameters.setCompressionMethod(CompressionMethod.DEFLATE);</span><br><span class="line">            // 压缩级别 5</span><br><span class="line">            parameters.setCompressionLevel(CompressionLevel.NORMAL);</span><br><span class="line">            if (!(password == null || "".equals(password))) {</span><br><span class="line">                parameters.setEncryptFiles(true);</span><br><span class="line">                // 加密方式 0</span><br><span class="line">                parameters.setEncryptionMethod(EncryptionMethod.ZIP_STANDARD);</span><br><span class="line">            }</span><br><span class="line">            ZipFile zipFile = new ZipFile(destFileName);</span><br><span class="line">            if (!(password == null || "".equals(password))) {</span><br><span class="line">                zipFile.setPassword(password.toCharArray());</span><br><span class="line">            }</span><br><span class="line">            for (File file : files) {</span><br><span class="line">                zipFile.addFile(file, parameters);</span><br><span class="line">            }</span><br><span class="line">            return true;</span><br><span class="line">        } catch (ZipException e) {</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            throw new ZipException(e);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 根据给定密码压缩文件(s)到指定位置</span><br><span class="line">     *</span><br><span class="line">     * @param destFileName 压缩文件存放绝对路径 e.g.:D:/upload/zip/demo.zip</span><br><span class="line">     * @param password 密码(可为null)</span><br><span class="line">     * @param filePaths 单个文件路径或文件路径数组</span><br><span class="line">     * @return 最终的压缩文件存放的绝对路径,如果为false则说明压缩失败.</span><br><span class="line">     */</span><br><span class="line">    public static boolean compress(String destFileName, String password, String... filePaths) throws ZipException {</span><br><span class="line">        int size = filePaths.length;</span><br><span class="line">        File[] files = new File[size];</span><br><span class="line">        for (int i = 0; i <span class="tag">&lt; <span class="attr">size</span>; <span class="attr">i</span>++) {</span></span><br><span class="line"><span class="tag">            <span class="attr">files</span>[<span class="attr">i</span>] = <span class="string">new</span> <span class="attr">File</span>(<span class="attr">filePaths</span>[<span class="attr">i</span>]);</span></span><br><span class="line"><span class="tag">        }</span></span><br><span class="line"><span class="tag">        <span class="attr">return</span> <span class="attr">compress</span>(<span class="attr">destFileName</span>, <span class="attr">password</span>, <span class="attr">files</span>);</span></span><br><span class="line"><span class="tag">    }</span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">    /**</span></span><br><span class="line"><span class="tag">     * 根据给定密码压缩文件(<span class="attr">s</span>)到指定位置</span></span><br><span class="line"><span class="tag">     *</span></span><br><span class="line"><span class="tag">     * @<span class="attr">param</span> <span class="attr">destFileName</span> 压缩文件存放绝对路径 <span class="attr">e.g.:D:</span>/<span class="attr">upload</span>/<span class="attr">zip</span>/<span class="attr">demo.zip</span></span></span><br><span class="line"><span class="tag">     * @<span class="attr">param</span> <span class="attr">password</span> 密码(可为<span class="attr">null</span>)</span></span><br><span class="line"><span class="tag">     * @<span class="attr">param</span> <span class="attr">folder</span> 文件夹路径</span></span><br><span class="line"><span class="tag">     * @<span class="attr">return</span> 最终的压缩文件存放的绝对路径,如果为<span class="attr">false</span>则说明压缩失败<span class="attr">.</span></span></span><br><span class="line"><span class="tag">     */</span></span><br><span class="line"><span class="tag">    <span class="attr">public</span> <span class="attr">static</span> <span class="attr">boolean</span> <span class="attr">compressFolder</span>(<span class="attr">String</span> <span class="attr">destFileName</span>, <span class="attr">String</span> <span class="attr">password</span>, <span class="attr">String</span> <span class="attr">folder</span>) <span class="attr">throws</span> <span class="attr">ZipException</span> {</span></span><br><span class="line"><span class="tag">        <span class="attr">File</span> <span class="attr">folderParam</span> = <span class="string">new</span> <span class="attr">File</span>(<span class="attr">folder</span>);</span></span><br><span class="line"><span class="tag">        <span class="attr">if</span> (<span class="attr">folderParam.isDirectory</span>()) {</span></span><br><span class="line"><span class="tag">            <span class="attr">File</span>[] <span class="attr">files</span> = <span class="string">folderParam.listFiles();</span></span></span><br><span class="line"><span class="tag">            <span class="attr">return</span> <span class="attr">compress</span>(<span class="attr">destFileName</span>, <span class="attr">password</span>, <span class="attr">files</span>);</span></span><br><span class="line"><span class="tag">        }</span></span><br><span class="line"><span class="tag">        <span class="attr">return</span> <span class="attr">false</span>;</span></span><br><span class="line"><span class="tag">    }</span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">    /**</span></span><br><span class="line"><span class="tag">     * 根据所给密码解压<span class="attr">zip</span>压缩包到指定目录</span></span><br><span class="line">     * &lt;p&gt;</span><br><span class="line">     * 如果指定目录不存在,可以自动创建,不合法的路径将导致异常被抛出</span><br><span class="line">     *</span><br><span class="line">     * @param zipFile zip压缩包绝对路径</span><br><span class="line">     * @param dest 指定解压文件夹位置</span><br><span class="line">     * @param password 密码(可为null)</span><br><span class="line">     * @return 解压后的文件数组</span><br><span class="line">     * @throws ZipException 异常</span><br><span class="line">     */</span><br><span class="line">    public static File[] deCompress(File zipFile, String dest, String password) throws ZipException {</span><br><span class="line">        //1.判断指定目录是否存在</span><br><span class="line">        File destDir = new File(dest);</span><br><span class="line">        if (destDir.isDirectory() &amp;&amp; !destDir.exists()) {</span><br><span class="line">            boolean mkdir = destDir.mkdir();</span><br><span class="line">            System.out.println(mkdir);</span><br><span class="line">        }</span><br><span class="line">        //2.初始化zip工具</span><br><span class="line">        ZipFile zFile = new ZipFile(zipFile);</span><br><span class="line">        zFile.setCharset(Charset.forName("UTF-8"));</span><br><span class="line">        if (!zFile.isValidZipFile()) {</span><br><span class="line">            throw new ZipException("压缩文件不合法,可能被损坏.");</span><br><span class="line">        }</span><br><span class="line">        //3.判断是否已加密</span><br><span class="line">        if (zFile.isEncrypted()) {</span><br><span class="line">            zFile.setPassword(password.toCharArray());</span><br><span class="line">        }</span><br><span class="line">        //4.解压所有文件</span><br><span class="line">        zFile.extractAll(dest);</span><br><span class="line">        List headerList = zFile.getFileHeaders();</span><br><span class="line">        List<span class="tag">&lt;<span class="name">File</span>&gt;</span> extractedFileList = new ArrayList<span class="tag">&lt;&gt;</span>();</span><br><span class="line">        for(Object object : headerList) {</span><br><span class="line">            FileHeader fileHeader = (FileHeader)object;</span><br><span class="line">            if (!fileHeader.isDirectory()) {</span><br><span class="line">                extractedFileList.add(new File(destDir,fileHeader.getFileName()));</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        File [] extractedFiles = new File[extractedFileList.size()];</span><br><span class="line">        extractedFileList.toArray(extractedFiles);</span><br><span class="line">        return extractedFiles;</span><br><span class="line">    }</span><br><span class="line">    /**</span><br><span class="line">     * 解压无密码的zip压缩包到指定目录</span><br><span class="line">     * @param zipFile zip压缩包</span><br><span class="line">     * @param dest 指定解压文件夹位置</span><br><span class="line">     * @return 解压后的文件数组</span><br><span class="line">     */</span><br><span class="line">    public static File[] deCompress(File zipFile, String dest) throws ZipException {</span><br><span class="line">        try {</span><br><span class="line">            return deCompress(zipFile, dest, null);</span><br><span class="line">        } catch (ZipException e) {</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            throw new ZipException(e);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    /**</span><br><span class="line">     * 根据所给密码解压zip压缩包到指定目录</span><br><span class="line">     * @param zipFilePath zip压缩包绝对路径</span><br><span class="line">     * @param dest 指定解压文件夹位置</span><br><span class="line">     * @param password 压缩包密码</span><br><span class="line">     * @return 解压后的所有文件数组</span><br><span class="line">     */</span><br><span class="line">    public static File[] deCompress(String zipFilePath, String dest, String password) throws ZipException {</span><br><span class="line">        try {</span><br><span class="line">            return deCompress(new File(zipFilePath), dest, password);</span><br><span class="line">        } catch (ZipException e) {</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            throw new ZipException(e);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    /**</span><br><span class="line">     * 无密码解压压缩包到指定目录</span><br><span class="line">     * @param zipFilePath zip压缩包绝对路径</span><br><span class="line">     * @param dest 指定解压文件夹位置</span><br><span class="line">     * @return 解压后的所有文件数组</span><br><span class="line">     */</span><br><span class="line">    public static File[] deCompress(String zipFilePath, String dest) throws ZipException {</span><br><span class="line">        try {</span><br><span class="line">            return deCompress(new File(zipFilePath), dest, null);</span><br><span class="line">        } catch (ZipException e) {</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            throw new ZipException(e);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>压缩无密码：</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">@Test</span><br><span class="line">void 压缩无密码() {</span><br><span class="line">    String file1 = "D:\\test\\unzip\\333\\123.txt";</span><br><span class="line">    String file2 = "D:\\test\\unzip\\333\\456.txt";</span><br><span class="line">    String file3 = "D:\\test\\unzip\\333\\789.txt";</span><br><span class="line">    String file4 = "D:\\test\\unzip\\333\\789 - 副本.txt";</span><br><span class="line">    //压缩后的zip文件路径</span><br><span class="line">    String zipFilePath1 = "D:\\test\\unzip\\5555.zip";</span><br><span class="line">    try {</span><br><span class="line">        System.out.println(Zip4jUtil.compress(zipFilePath1,null,file1,file2,file3,file4));</span><br><span class="line">    } catch (ZipException e) {</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p>压缩有密码：</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@Test</span><br><span class="line">void 压缩有密码() {</span><br><span class="line">    String file1 = "D:\\test\\unzip\\333\\123.txt";</span><br><span class="line">    String file2 = "D:\\test\\unzip\\333\\456.txt";</span><br><span class="line">    String file3 = "D:\\test\\unzip\\333\\789.txt";</span><br><span class="line">    //压缩后的zip文件路径</span><br><span class="line">    String zipFilePath2 = "D:\\test\\unzip\\6666.zip";</span><br><span class="line">    try {</span><br><span class="line">        System.out.println(Zip4jUtil.compress(zipFilePath2,"123",file1,file2,file3));</span><br><span class="line">    } catch (ZipException e) {</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p>解压无密码：</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@Test</span><br><span class="line">void 解压无密码() {</span><br><span class="line">    String zipFilePath1 = "D:\\test\\unzip\\5555.zip";</span><br><span class="line">    File[] files = new File[0];</span><br><span class="line">    try {</span><br><span class="line">        files = Zip4jUtil.deCompress(zipFilePath1, "D:\\test\\unzip\\5555");</span><br><span class="line">    } catch (ZipException e) {</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    }</span><br><span class="line">    if(files != null){</span><br><span class="line">        System.out.println(files.length);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p>解压有密码：</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@Test</span><br><span class="line">void 解压有密码() {</span><br><span class="line">    String zipFilePath1 = "D:\\test\\unzip\\6666.zip";</span><br><span class="line">    File[] files = new File[0];</span><br><span class="line">    try {</span><br><span class="line">        files = Zip4jUtil.deCompress(zipFilePath1, "D:\\test\\unzip\\6666", "123");</span><br><span class="line">    } catch (ZipException e) {</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    }</span><br><span class="line">    if(files != null){</span><br><span class="line">        System.out.println(files.length);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      zip工具
    
    </summary>
    
    
      <category term="J-Tools" scheme="https://www.zhuqiaolun.com/categories/J-Tools/"/>
    
    
      <category term="Java" scheme="https://www.zhuqiaolun.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>自定义Redis配置</title>
    <link href="https://www.zhuqiaolun.com/2020/11/1605606341401/1605606341401/"/>
    <id>https://www.zhuqiaolun.com/2020/11/1605606341401/1605606341401/</id>
    <published>2020-11-17T09:45:41.000Z</published>
    <updated>2021-03-01T06:46:25.767Z</updated>
    
    <content type="html"><![CDATA[<p>修改原生的yml配置，采取自定义模式，<br>配置文件仅为动态值，如不需要则可删除，代码设有默认值，</p><h3 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h3><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- redis start --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-pool2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- redis end --&gt;</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>配置文件：redis-config.properties</p><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#  redis set</span><br><span class="line">spring.redis.database=1</span><br><span class="line">spring.redis.host=127.0.0.1</span><br><span class="line">spring.redis.password=</span><br></pre></td></tr></tbody></table></figure></div><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import com.fasterxml.jackson.annotation.JsonAutoDetect;</span><br><span class="line">import com.fasterxml.jackson.annotation.PropertyAccessor;</span><br><span class="line">import com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line">import org.apache.commons.pool2.impl.GenericObjectPoolConfig;</span><br><span class="line">import org.springframework.beans.factory.annotation.Value;</span><br><span class="line">import org.springframework.cache.CacheManager;</span><br><span class="line">import org.springframework.cache.annotation.EnableCaching;</span><br><span class="line">import org.springframework.context.annotation.Bean;</span><br><span class="line">import org.springframework.context.annotation.PropertySource;</span><br><span class="line">import org.springframework.data.redis.cache.RedisCacheConfiguration;</span><br><span class="line">import org.springframework.data.redis.cache.RedisCacheManager;</span><br><span class="line">import org.springframework.data.redis.cache.RedisCacheWriter;</span><br><span class="line">import org.springframework.data.redis.connection.RedisConnectionFactory;</span><br><span class="line">import org.springframework.data.redis.connection.RedisPassword;</span><br><span class="line">import org.springframework.data.redis.connection.RedisStandaloneConfiguration;</span><br><span class="line">import org.springframework.data.redis.connection.lettuce.LettuceClientConfiguration;</span><br><span class="line">import org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory;</span><br><span class="line">import org.springframework.data.redis.connection.lettuce.LettucePoolingClientConfiguration;</span><br><span class="line">import org.springframework.data.redis.core.RedisTemplate;</span><br><span class="line">import org.springframework.data.redis.serializer.Jackson2JsonRedisSerializer;</span><br><span class="line">import org.springframework.data.redis.serializer.StringRedisSerializer;</span><br><span class="line">import org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line">import java.time.Duration;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @className: RedisConfig.java</span><br><span class="line"> * @description: Redis配置</span><br><span class="line"> * @author: Demon</span><br><span class="line"> */</span><br><span class="line">@Component</span><br><span class="line">@EnableCaching</span><br><span class="line">@PropertySource(value = {"classpath:redis-config.properties"},encoding = "UTF-8")</span><br><span class="line">public class RedisConfig{</span><br><span class="line"></span><br><span class="line">    @Value("${spring.redis.database:0}")</span><br><span class="line">    private int database;</span><br><span class="line">    @Value("${spring.redis.host:localhost}")</span><br><span class="line">    private String host;</span><br><span class="line">    @Value("${spring.redis.port:6379}")</span><br><span class="line">    private int port;</span><br><span class="line">    @Value("${spring.redis.password:}")</span><br><span class="line">    private String password;</span><br><span class="line">    @Value("${spring.redis.timeout:10000}")</span><br><span class="line">    private long timeout;</span><br><span class="line"></span><br><span class="line">    @Value("${spring.redis.pool.maxTotal:30}")</span><br><span class="line">    private int maxTotal;</span><br><span class="line">    @Value("${spring.redis.pool.maxIdle:30}")</span><br><span class="line">    private int maxIdle;</span><br><span class="line">    @Value("${spring.redis.pool.minIdle:10}")</span><br><span class="line">    private int minIdle;</span><br><span class="line">    @Value("${spring.redis.pool.maxWaitMillis:10000}")</span><br><span class="line">    private int maxWaitMillis;</span><br><span class="line"></span><br><span class="line">    @Value("${spring.redis.testOnBorrow:true}")</span><br><span class="line">    private boolean testOnBorrow;</span><br><span class="line">    @Value("${spring.redis.testOnReturn:false}")</span><br><span class="line">    private boolean testOnReturn;</span><br><span class="line">    @Value("${spring.redis.testWhileIdle:true}")</span><br><span class="line">    private boolean testWhileIdle;</span><br><span class="line"></span><br><span class="line">    @Bean</span><br><span class="line">    public RedisConnectionFactory lettuceConnectionFactory() {</span><br><span class="line">        GenericObjectPoolConfig genericObjectPoolConfig = new GenericObjectPoolConfig();</span><br><span class="line">        genericObjectPoolConfig.setMaxTotal(maxTotal);</span><br><span class="line">        genericObjectPoolConfig.setMaxWaitMillis(maxWaitMillis);</span><br><span class="line">        genericObjectPoolConfig.setMaxIdle(maxIdle);</span><br><span class="line">        genericObjectPoolConfig.setMinIdle(minIdle);</span><br><span class="line">        genericObjectPoolConfig.setTestOnBorrow(testOnBorrow);</span><br><span class="line">        genericObjectPoolConfig.setTestOnReturn(testOnReturn);</span><br><span class="line">        genericObjectPoolConfig.setTestWhileIdle(testWhileIdle);</span><br><span class="line">        // 单点redis</span><br><span class="line">        RedisStandaloneConfiguration redisConfig = new RedisStandaloneConfiguration();</span><br><span class="line">        redisConfig.setDatabase(database);</span><br><span class="line">        redisConfig.setHostName(host);</span><br><span class="line">        redisConfig.setPort(port);</span><br><span class="line">        if (password != null &amp;&amp; !"".equals(password)) {</span><br><span class="line">            redisConfig.setPassword(RedisPassword.of(password));</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        LettuceClientConfiguration clientConfig = LettucePoolingClientConfiguration.builder()</span><br><span class="line">                .poolConfig(genericObjectPoolConfig)</span><br><span class="line">                .commandTimeout(Duration.ofMillis(timeout))</span><br><span class="line">                .shutdownTimeout(Duration.ZERO)</span><br><span class="line">                .build();</span><br><span class="line">        return new LettuceConnectionFactory(redisConfig,clientConfig);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 配置自定义redisTemplate</span><br><span class="line">     */</span><br><span class="line">    @Bean</span><br><span class="line">    public RedisTemplate<span class="tag">&lt;<span class="name">String,</span> <span class="attr">Object</span>&gt;</span> redisTemplate(RedisConnectionFactory redisConnectionFactory) {</span><br><span class="line">        System.out.println("★★★★★加载 bean - RedisTemplate<span class="tag">&lt;<span class="name">String,</span> <span class="attr">Object</span>&gt;</span> ★★★★★");</span><br><span class="line">        RedisTemplate<span class="tag">&lt;<span class="name">String,</span> <span class="attr">Object</span>&gt;</span> redisTemplate = new RedisTemplate<span class="tag">&lt;&gt;</span>();</span><br><span class="line">        redisTemplate.setConnectionFactory(redisConnectionFactory);</span><br><span class="line">        //使用Jackson2JsonRedisSerializer来序列化和反序列化redis的value值 替换默认序列化</span><br><span class="line">        Jackson2JsonRedisSerializer<span class="tag">&lt;<span class="name">Object</span>&gt;</span> jackson2JsonRedisSerializer = new Jackson2JsonRedisSerializer<span class="tag">&lt;&gt;</span>(Object.class);</span><br><span class="line">        ObjectMapper objectMapper = new ObjectMapper();</span><br><span class="line">        objectMapper.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);</span><br><span class="line">        objectMapper.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL);</span><br><span class="line">        jackson2JsonRedisSerializer.setObjectMapper(objectMapper);</span><br><span class="line">        //使用StringRedisSerializer来序列化和反序列化redis的key值</span><br><span class="line">        redisTemplate.setKeySerializer(new StringRedisSerializer());</span><br><span class="line">        redisTemplate.setHashKeySerializer(jackson2JsonRedisSerializer);</span><br><span class="line">        redisTemplate.setValueSerializer(jackson2JsonRedisSerializer);</span><br><span class="line">        redisTemplate.setHashValueSerializer(jackson2JsonRedisSerializer);</span><br><span class="line">        redisTemplate.afterPropertiesSet();</span><br><span class="line">        //事务支持</span><br><span class="line">        redisTemplate.setEnableTransactionSupport(true);</span><br><span class="line">        return redisTemplate;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 缓存配置管理器</span><br><span class="line">     */</span><br><span class="line">    @Bean</span><br><span class="line">    public CacheManager cacheManager(RedisConnectionFactory redisConnectionFactory) {</span><br><span class="line">        System.out.println("★★★★★加载 bean - cacheManager ★★★★★");</span><br><span class="line">        //以锁写入的方式创建RedisCacheWriter对象</span><br><span class="line">        RedisCacheWriter writer = RedisCacheWriter.lockingRedisCacheWriter(redisConnectionFactory);</span><br><span class="line">        //创建默认缓存配置对象</span><br><span class="line">        RedisCacheConfiguration config = RedisCacheConfiguration.defaultCacheConfig();</span><br><span class="line">        return new RedisCacheManager(writer, config);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><div class="highlight-box"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@Resource</span><br><span class="line">private RedisTemplate<span class="tag">&lt;<span class="name">String,Object</span>&gt;</span> redisTemplate;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ValueOperations<span class="tag">&lt;<span class="name">String,Object</span>&gt;</span> valueOperations = redisTemplate.opsForValue();</span><br><span class="line">valueOperations.set("admin","");</span><br></pre></td></tr></tbody></table></figure></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      自定义Redis配置,修改原生的yml配置，采取自定义模式
    
    </summary>
    
    
      <category term="SpringBoot" scheme="https://www.zhuqiaolun.com/categories/SpringBoot/"/>
    
    
      <category term="Redis" scheme="https://www.zhuqiaolun.com/tags/Redis/"/>
    
  </entry>
  
</feed>
